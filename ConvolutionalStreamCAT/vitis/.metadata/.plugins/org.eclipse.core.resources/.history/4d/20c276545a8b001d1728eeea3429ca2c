#pragma once
#include "video_connected.hpp"
#include "video_streaming.hpp"

class VideoPaused : public VideoConnected
{
public:
	static VideoCaptureState* Instance(){
		if(instance_ == nullptr)
			instance_ = new VideoPaused;
		return instance_;
	}
	virtual void Start(VideoCapture* context) override{
		//TODO: Setup Streaming
		ChangeState(context, VideoStreaming::Instance());
	}
protected:
    VideoPaused(){

    }
    ~VideoPaused(){
    	if(instance_ != nullptr)
    		delete instance_;
    }
private:
    static VideoCaptureState* instance_ = nullptr;
};

VideoCaptureState* VideoPaused::instance_ = nullptr;
