// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "yuv_scale.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic yuv_scale::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic yuv_scale::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> yuv_scale::ap_ST_fsm_state1 = "1";
const sc_lv<3> yuv_scale::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> yuv_scale::ap_ST_fsm_state11 = "100";
const bool yuv_scale::ap_const_boolean_1 = true;
const sc_lv<32> yuv_scale::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> yuv_scale::ap_const_lv32_1 = "1";
const bool yuv_scale::ap_const_boolean_0 = false;
const sc_lv<1> yuv_scale::ap_const_lv1_0 = "0";
const sc_lv<1> yuv_scale::ap_const_lv1_1 = "1";
const sc_lv<16> yuv_scale::ap_const_lv16_0 = "0000000000000000";
const sc_lv<16> yuv_scale::ap_const_lv16_1 = "1";
const sc_lv<10> yuv_scale::ap_const_lv10_0 = "0000000000";
const sc_lv<8> yuv_scale::ap_const_lv8_0 = "00000000";
const sc_lv<32> yuv_scale::ap_const_lv32_7 = "111";
const sc_lv<32> yuv_scale::ap_const_lv32_E = "1110";
const sc_lv<32> yuv_scale::ap_const_lv32_2 = "10";

yuv_scale::yuv_scale(sc_module_name name) : sc_module(name), mVcdFile(0) {
    yuv_filter_mul_mubkb_x_U12 = new yuv_filter_mul_mubkb<1,1,16,16,32>("yuv_filter_mul_mubkb_x_U12");
    yuv_filter_mul_mubkb_x_U12->din0(bound_fu_379_p0);
    yuv_filter_mul_mubkb_x_U12->din1(bound_fu_379_p1);
    yuv_filter_mul_mubkb_x_U12->dout(bound_fu_379_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011001);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011011);

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter7);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten_fu_229_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( in_width_read );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( in_height_read );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_bound_fu_379_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound_fu_379_p00 );

    SC_METHOD(thread_bound_fu_379_p00);
    sensitive << ( in_height_read );

    SC_METHOD(thread_bound_fu_379_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound_fu_379_p10 );

    SC_METHOD(thread_bound_fu_379_p10);
    sensitive << ( in_width_read );

    SC_METHOD(thread_exitcond3_fu_246_p2);
    sensitive << ( in_height_read );
    sensitive << ( exitcond_flatten_fu_229_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( y_phi_fu_202_p4 );

    SC_METHOD(thread_exitcond_flatten_fu_229_p2);
    sensitive << ( indvar_flatten_reg_176 );
    sensitive << ( bound_reg_411 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_in_channels_ch1_address0);
    sensitive << ( tmp_10_cast_fu_309_p1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_in_channels_ch1_ce0);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_in_channels_ch2_address0);
    sensitive << ( tmp_10_cast_fu_309_p1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_in_channels_ch2_ce0);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_in_channels_ch3_address0);
    sensitive << ( tmp_10_cast_fu_309_p1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_in_channels_ch3_ce0);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_indvar_flatten_next_fu_234_p2);
    sensitive << ( indvar_flatten_reg_176 );

    SC_METHOD(thread_out_channels_ch1_address0);
    sensitive << ( ap_reg_pp0_iter6_tmp_10_cast_reg_456 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_out_channels_ch1_ce0);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_METHOD(thread_out_channels_ch1_d0);
    sensitive << ( tmp_4_reg_493 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_out_channels_ch1_we0);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_reg_pp0_iter6_exitcond_flatten_reg_416 );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    SC_METHOD(thread_out_channels_ch2_address0);
    sensitive << ( ap_reg_pp0_iter6_tmp_10_cast_reg_456 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_out_channels_ch2_ce0);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_METHOD(thread_out_channels_ch2_d0);
    sensitive << ( tmp_6_reg_498 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_out_channels_ch2_we0);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_reg_pp0_iter6_exitcond_flatten_reg_416 );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    SC_METHOD(thread_out_channels_ch3_address0);
    sensitive << ( ap_reg_pp0_iter6_tmp_10_cast_reg_456 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_out_channels_ch3_ce0);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_METHOD(thread_out_channels_ch3_d0);
    sensitive << ( tmp_9_reg_503 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_out_channels_ch3_we0);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_reg_pp0_iter6_exitcond_flatten_reg_416 );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    SC_METHOD(thread_p_shl1_cast_fu_282_p3);
    sensitive << ( tmp_1_reg_441 );

    SC_METHOD(thread_p_shl_cast_fu_275_p3);
    sensitive << ( tmp_reg_436 );

    SC_METHOD(thread_tmp_10_cast_fu_309_p1);
    sensitive << ( tmp_5_reg_446 );

    SC_METHOD(thread_tmp_1_cast_fu_213_p1);
    sensitive << ( U_scale );

    SC_METHOD(thread_tmp_1_fu_271_p1);
    sensitive << ( tmp_3_mid2_v_fu_259_p3 );

    SC_METHOD(thread_tmp_2_cast_fu_217_p1);
    sensitive << ( V_scale );

    SC_METHOD(thread_tmp_3_fu_289_p2);
    sensitive << ( p_shl_cast_fu_275_p3 );
    sensitive << ( p_shl1_cast_fu_282_p3 );

    SC_METHOD(thread_tmp_3_mid2_v_fu_259_p3);
    sensitive << ( x_phi_fu_191_p4 );
    sensitive << ( exitcond3_fu_246_p2 );
    sensitive << ( x_1_fu_240_p2 );

    SC_METHOD(thread_tmp_5_cast_fu_295_p1);
    sensitive << ( y_mid2_reg_425 );

    SC_METHOD(thread_tmp_5_fu_298_p2);
    sensitive << ( tmp_5_cast_fu_295_p1 );
    sensitive << ( tmp_3_fu_289_p2 );

    SC_METHOD(thread_tmp_7_fu_318_p0);
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( tmp_7_fu_318_p00 );

    SC_METHOD(thread_tmp_7_fu_318_p00);
    sensitive << ( Y_reg_478 );

    SC_METHOD(thread_tmp_7_fu_318_p1);
    sensitive << ( tmp_cast_reg_396 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_tmp_7_fu_318_p2);
    sensitive << ( tmp_7_fu_318_p0 );
    sensitive << ( tmp_7_fu_318_p1 );

    SC_METHOD(thread_tmp_8_fu_334_p0);
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( tmp_8_fu_334_p00 );

    SC_METHOD(thread_tmp_8_fu_334_p00);
    sensitive << ( V_reg_488 );

    SC_METHOD(thread_tmp_8_fu_334_p1);
    sensitive << ( tmp_2_cast_reg_406 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_tmp_8_fu_334_p2);
    sensitive << ( tmp_8_fu_334_p0 );
    sensitive << ( tmp_8_fu_334_p1 );

    SC_METHOD(thread_tmp_cast_fu_209_p1);
    sensitive << ( Y_scale );

    SC_METHOD(thread_tmp_fu_267_p1);
    sensitive << ( tmp_3_mid2_v_fu_259_p3 );

    SC_METHOD(thread_tmp_s_fu_326_p0);
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( tmp_s_fu_326_p00 );

    SC_METHOD(thread_tmp_s_fu_326_p00);
    sensitive << ( U_reg_483 );

    SC_METHOD(thread_tmp_s_fu_326_p1);
    sensitive << ( tmp_1_cast_reg_401 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_tmp_s_fu_326_p2);
    sensitive << ( tmp_s_fu_326_p0 );
    sensitive << ( tmp_s_fu_326_p1 );

    SC_METHOD(thread_x_1_fu_240_p2);
    sensitive << ( x_phi_fu_191_p4 );

    SC_METHOD(thread_x_phi_fu_191_p4);
    sensitive << ( x_reg_187 );
    sensitive << ( exitcond_flatten_reg_416 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_3_mid2_v_reg_431 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_y_1_fu_304_p2);
    sensitive << ( y_mid2_reg_425 );

    SC_METHOD(thread_y_mid2_fu_251_p3);
    sensitive << ( y_phi_fu_202_p4 );
    sensitive << ( exitcond3_fu_246_p2 );

    SC_METHOD(thread_y_phi_fu_202_p4);
    sensitive << ( y_reg_198 );
    sensitive << ( exitcond_flatten_reg_416 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( y_1_fu_304_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( exitcond_flatten_fu_229_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00011011 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "yuv_scale_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_channels_ch1_address0, "(port)in_channels_ch1_address0");
    sc_trace(mVcdFile, in_channels_ch1_ce0, "(port)in_channels_ch1_ce0");
    sc_trace(mVcdFile, in_channels_ch1_q0, "(port)in_channels_ch1_q0");
    sc_trace(mVcdFile, in_channels_ch2_address0, "(port)in_channels_ch2_address0");
    sc_trace(mVcdFile, in_channels_ch2_ce0, "(port)in_channels_ch2_ce0");
    sc_trace(mVcdFile, in_channels_ch2_q0, "(port)in_channels_ch2_q0");
    sc_trace(mVcdFile, in_channels_ch3_address0, "(port)in_channels_ch3_address0");
    sc_trace(mVcdFile, in_channels_ch3_ce0, "(port)in_channels_ch3_ce0");
    sc_trace(mVcdFile, in_channels_ch3_q0, "(port)in_channels_ch3_q0");
    sc_trace(mVcdFile, in_width_read, "(port)in_width_read");
    sc_trace(mVcdFile, in_height_read, "(port)in_height_read");
    sc_trace(mVcdFile, out_channels_ch1_address0, "(port)out_channels_ch1_address0");
    sc_trace(mVcdFile, out_channels_ch1_ce0, "(port)out_channels_ch1_ce0");
    sc_trace(mVcdFile, out_channels_ch1_we0, "(port)out_channels_ch1_we0");
    sc_trace(mVcdFile, out_channels_ch1_d0, "(port)out_channels_ch1_d0");
    sc_trace(mVcdFile, out_channels_ch2_address0, "(port)out_channels_ch2_address0");
    sc_trace(mVcdFile, out_channels_ch2_ce0, "(port)out_channels_ch2_ce0");
    sc_trace(mVcdFile, out_channels_ch2_we0, "(port)out_channels_ch2_we0");
    sc_trace(mVcdFile, out_channels_ch2_d0, "(port)out_channels_ch2_d0");
    sc_trace(mVcdFile, out_channels_ch3_address0, "(port)out_channels_ch3_address0");
    sc_trace(mVcdFile, out_channels_ch3_ce0, "(port)out_channels_ch3_ce0");
    sc_trace(mVcdFile, out_channels_ch3_we0, "(port)out_channels_ch3_we0");
    sc_trace(mVcdFile, out_channels_ch3_d0, "(port)out_channels_ch3_d0");
    sc_trace(mVcdFile, Y_scale, "(port)Y_scale");
    sc_trace(mVcdFile, U_scale, "(port)U_scale");
    sc_trace(mVcdFile, V_scale, "(port)V_scale");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_176, "indvar_flatten_reg_176");
    sc_trace(mVcdFile, x_reg_187, "x_reg_187");
    sc_trace(mVcdFile, y_reg_198, "y_reg_198");
    sc_trace(mVcdFile, tmp_cast_fu_209_p1, "tmp_cast_fu_209_p1");
    sc_trace(mVcdFile, tmp_cast_reg_396, "tmp_cast_reg_396");
    sc_trace(mVcdFile, tmp_1_cast_fu_213_p1, "tmp_1_cast_fu_213_p1");
    sc_trace(mVcdFile, tmp_1_cast_reg_401, "tmp_1_cast_reg_401");
    sc_trace(mVcdFile, tmp_2_cast_fu_217_p1, "tmp_2_cast_fu_217_p1");
    sc_trace(mVcdFile, tmp_2_cast_reg_406, "tmp_2_cast_reg_406");
    sc_trace(mVcdFile, bound_fu_379_p2, "bound_fu_379_p2");
    sc_trace(mVcdFile, bound_reg_411, "bound_reg_411");
    sc_trace(mVcdFile, exitcond_flatten_fu_229_p2, "exitcond_flatten_fu_229_p2");
    sc_trace(mVcdFile, exitcond_flatten_reg_416, "exitcond_flatten_reg_416");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter6, "ap_block_state8_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter7, "ap_block_state9_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter8, "ap_block_state10_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011001, "ap_block_pp0_stage0_flag00011001");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond_flatten_reg_416, "ap_reg_pp0_iter1_exitcond_flatten_reg_416");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_exitcond_flatten_reg_416, "ap_reg_pp0_iter2_exitcond_flatten_reg_416");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_exitcond_flatten_reg_416, "ap_reg_pp0_iter3_exitcond_flatten_reg_416");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_exitcond_flatten_reg_416, "ap_reg_pp0_iter4_exitcond_flatten_reg_416");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_exitcond_flatten_reg_416, "ap_reg_pp0_iter5_exitcond_flatten_reg_416");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_exitcond_flatten_reg_416, "ap_reg_pp0_iter6_exitcond_flatten_reg_416");
    sc_trace(mVcdFile, indvar_flatten_next_fu_234_p2, "indvar_flatten_next_fu_234_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, y_mid2_fu_251_p3, "y_mid2_fu_251_p3");
    sc_trace(mVcdFile, y_mid2_reg_425, "y_mid2_reg_425");
    sc_trace(mVcdFile, tmp_3_mid2_v_fu_259_p3, "tmp_3_mid2_v_fu_259_p3");
    sc_trace(mVcdFile, tmp_3_mid2_v_reg_431, "tmp_3_mid2_v_reg_431");
    sc_trace(mVcdFile, tmp_fu_267_p1, "tmp_fu_267_p1");
    sc_trace(mVcdFile, tmp_reg_436, "tmp_reg_436");
    sc_trace(mVcdFile, tmp_1_fu_271_p1, "tmp_1_fu_271_p1");
    sc_trace(mVcdFile, tmp_1_reg_441, "tmp_1_reg_441");
    sc_trace(mVcdFile, tmp_5_fu_298_p2, "tmp_5_fu_298_p2");
    sc_trace(mVcdFile, tmp_5_reg_446, "tmp_5_reg_446");
    sc_trace(mVcdFile, y_1_fu_304_p2, "y_1_fu_304_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, tmp_10_cast_fu_309_p1, "tmp_10_cast_fu_309_p1");
    sc_trace(mVcdFile, tmp_10_cast_reg_456, "tmp_10_cast_reg_456");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_tmp_10_cast_reg_456, "ap_reg_pp0_iter3_tmp_10_cast_reg_456");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_tmp_10_cast_reg_456, "ap_reg_pp0_iter4_tmp_10_cast_reg_456");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_tmp_10_cast_reg_456, "ap_reg_pp0_iter5_tmp_10_cast_reg_456");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_tmp_10_cast_reg_456, "ap_reg_pp0_iter6_tmp_10_cast_reg_456");
    sc_trace(mVcdFile, Y_reg_478, "Y_reg_478");
    sc_trace(mVcdFile, U_reg_483, "U_reg_483");
    sc_trace(mVcdFile, V_reg_488, "V_reg_488");
    sc_trace(mVcdFile, tmp_4_reg_493, "tmp_4_reg_493");
    sc_trace(mVcdFile, tmp_6_reg_498, "tmp_6_reg_498");
    sc_trace(mVcdFile, tmp_9_reg_503, "tmp_9_reg_503");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011011, "ap_block_pp0_stage0_flag00011011");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, x_phi_fu_191_p4, "x_phi_fu_191_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00000000, "ap_block_pp0_stage0_flag00000000");
    sc_trace(mVcdFile, y_phi_fu_202_p4, "y_phi_fu_202_p4");
    sc_trace(mVcdFile, exitcond3_fu_246_p2, "exitcond3_fu_246_p2");
    sc_trace(mVcdFile, x_1_fu_240_p2, "x_1_fu_240_p2");
    sc_trace(mVcdFile, p_shl_cast_fu_275_p3, "p_shl_cast_fu_275_p3");
    sc_trace(mVcdFile, p_shl1_cast_fu_282_p3, "p_shl1_cast_fu_282_p3");
    sc_trace(mVcdFile, tmp_5_cast_fu_295_p1, "tmp_5_cast_fu_295_p1");
    sc_trace(mVcdFile, tmp_3_fu_289_p2, "tmp_3_fu_289_p2");
    sc_trace(mVcdFile, tmp_7_fu_318_p0, "tmp_7_fu_318_p0");
    sc_trace(mVcdFile, tmp_7_fu_318_p1, "tmp_7_fu_318_p1");
    sc_trace(mVcdFile, tmp_s_fu_326_p0, "tmp_s_fu_326_p0");
    sc_trace(mVcdFile, tmp_s_fu_326_p1, "tmp_s_fu_326_p1");
    sc_trace(mVcdFile, tmp_8_fu_334_p0, "tmp_8_fu_334_p0");
    sc_trace(mVcdFile, tmp_8_fu_334_p1, "tmp_8_fu_334_p1");
    sc_trace(mVcdFile, tmp_7_fu_318_p2, "tmp_7_fu_318_p2");
    sc_trace(mVcdFile, tmp_s_fu_326_p2, "tmp_s_fu_326_p2");
    sc_trace(mVcdFile, tmp_8_fu_334_p2, "tmp_8_fu_334_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, bound_fu_379_p0, "bound_fu_379_p0");
    sc_trace(mVcdFile, bound_fu_379_p1, "bound_fu_379_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, bound_fu_379_p00, "bound_fu_379_p00");
    sc_trace(mVcdFile, bound_fu_379_p10, "bound_fu_379_p10");
    sc_trace(mVcdFile, tmp_7_fu_318_p00, "tmp_7_fu_318_p00");
    sc_trace(mVcdFile, tmp_8_fu_334_p00, "tmp_8_fu_334_p00");
    sc_trace(mVcdFile, tmp_s_fu_326_p00, "tmp_s_fu_326_p00");
#endif

    }
}

yuv_scale::~yuv_scale() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete yuv_filter_mul_mubkb_x_U12;
}

void yuv_scale::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter8 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_fu_229_p2.read(), ap_const_lv1_0))) {
        indvar_flatten_reg_176 = indvar_flatten_next_fu_234_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_176 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_416.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        x_reg_187 = tmp_3_mid2_v_reg_431.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        x_reg_187 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_416.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        y_reg_198 = y_1_fu_304_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        y_reg_198 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_reg_pp0_iter4_exitcond_flatten_reg_416.read(), ap_const_lv1_0))) {
        U_reg_483 = in_channels_ch2_q0.read();
        V_reg_488 = in_channels_ch3_q0.read();
        Y_reg_478 = in_channels_ch1_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond_flatten_reg_416 = exitcond_flatten_reg_416.read();
        exitcond_flatten_reg_416 = exitcond_flatten_fu_229_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) {
        ap_reg_pp0_iter2_exitcond_flatten_reg_416 = ap_reg_pp0_iter1_exitcond_flatten_reg_416.read();
        ap_reg_pp0_iter3_exitcond_flatten_reg_416 = ap_reg_pp0_iter2_exitcond_flatten_reg_416.read();
        ap_reg_pp0_iter3_tmp_10_cast_reg_456 = tmp_10_cast_reg_456.read();
        ap_reg_pp0_iter4_exitcond_flatten_reg_416 = ap_reg_pp0_iter3_exitcond_flatten_reg_416.read();
        ap_reg_pp0_iter4_tmp_10_cast_reg_456 = ap_reg_pp0_iter3_tmp_10_cast_reg_456.read();
        ap_reg_pp0_iter5_exitcond_flatten_reg_416 = ap_reg_pp0_iter4_exitcond_flatten_reg_416.read();
        ap_reg_pp0_iter5_tmp_10_cast_reg_456 = ap_reg_pp0_iter4_tmp_10_cast_reg_456.read();
        ap_reg_pp0_iter6_exitcond_flatten_reg_416 = ap_reg_pp0_iter5_exitcond_flatten_reg_416.read();
        ap_reg_pp0_iter6_tmp_10_cast_reg_456 = ap_reg_pp0_iter5_tmp_10_cast_reg_456.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        bound_reg_411 = bound_fu_379_p2.read();
        tmp_1_cast_reg_401 = tmp_1_cast_fu_213_p1.read();
        tmp_2_cast_reg_406 = tmp_2_cast_fu_217_p1.read();
        tmp_cast_reg_396 = tmp_cast_fu_209_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_reg_pp0_iter1_exitcond_flatten_reg_416.read(), ap_const_lv1_0))) {
        tmp_10_cast_reg_456 = tmp_10_cast_fu_309_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_229_p2.read(), ap_const_lv1_0))) {
        tmp_1_reg_441 = tmp_1_fu_271_p1.read();
        tmp_reg_436 = tmp_fu_267_p1.read();
        y_mid2_reg_425 = y_mid2_fu_251_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_fu_229_p2.read(), ap_const_lv1_0))) {
        tmp_3_mid2_v_reg_431 = tmp_3_mid2_v_fu_259_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_reg_pp0_iter5_exitcond_flatten_reg_416.read(), ap_const_lv1_0))) {
        tmp_4_reg_493 = tmp_7_fu_318_p2.read().range(14, 7);
        tmp_6_reg_498 = tmp_s_fu_326_p2.read().range(14, 7);
        tmp_9_reg_503 = tmp_8_fu_334_p2.read().range(14, 7);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_reg_416.read(), ap_const_lv1_0))) {
        tmp_5_reg_446 = tmp_5_fu_298_p2.read();
    }
}

void yuv_scale::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void yuv_scale::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void yuv_scale::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[2];
}

void yuv_scale::thread_ap_block_pp0_stage0_flag00000000() {
    ap_block_pp0_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_pp0_stage0_flag00011001() {
    ap_block_pp0_stage0_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_pp0_stage0_flag00011011() {
    ap_block_pp0_stage0_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_state10_pp0_stage0_iter8() {
    ap_block_state10_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_state8_pp0_stage0_iter6() {
    ap_block_state8_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_state9_pp0_stage0_iter7() {
    ap_block_state9_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_229_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void yuv_scale::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void yuv_scale::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void yuv_scale::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void yuv_scale::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void yuv_scale::thread_ap_return_0() {
    ap_return_0 = in_width_read.read();
}

void yuv_scale::thread_ap_return_1() {
    ap_return_1 = in_height_read.read();
}

void yuv_scale::thread_bound_fu_379_p0() {
    bound_fu_379_p0 =  (sc_lv<16>) (bound_fu_379_p00.read());
}

void yuv_scale::thread_bound_fu_379_p00() {
    bound_fu_379_p00 = esl_zext<32,16>(in_height_read.read());
}

void yuv_scale::thread_bound_fu_379_p1() {
    bound_fu_379_p1 =  (sc_lv<16>) (bound_fu_379_p10.read());
}

void yuv_scale::thread_bound_fu_379_p10() {
    bound_fu_379_p10 = esl_zext<32,16>(in_width_read.read());
}

void yuv_scale::thread_exitcond3_fu_246_p2() {
    exitcond3_fu_246_p2 = (!y_phi_fu_202_p4.read().is_01() || !in_height_read.read().is_01())? sc_lv<1>(): sc_lv<1>(y_phi_fu_202_p4.read() == in_height_read.read());
}

void yuv_scale::thread_exitcond_flatten_fu_229_p2() {
    exitcond_flatten_fu_229_p2 = (!indvar_flatten_reg_176.read().is_01() || !bound_reg_411.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_176.read() == bound_reg_411.read());
}

void yuv_scale::thread_in_channels_ch1_address0() {
    in_channels_ch1_address0 =  (sc_lv<22>) (tmp_10_cast_fu_309_p1.read());
}

void yuv_scale::thread_in_channels_ch1_ce0() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read())))) {
        in_channels_ch1_ce0 = ap_const_logic_1;
    } else {
        in_channels_ch1_ce0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_in_channels_ch2_address0() {
    in_channels_ch2_address0 =  (sc_lv<22>) (tmp_10_cast_fu_309_p1.read());
}

void yuv_scale::thread_in_channels_ch2_ce0() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read())))) {
        in_channels_ch2_ce0 = ap_const_logic_1;
    } else {
        in_channels_ch2_ce0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_in_channels_ch3_address0() {
    in_channels_ch3_address0 =  (sc_lv<22>) (tmp_10_cast_fu_309_p1.read());
}

void yuv_scale::thread_in_channels_ch3_ce0() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read())))) {
        in_channels_ch3_ce0 = ap_const_logic_1;
    } else {
        in_channels_ch3_ce0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_indvar_flatten_next_fu_234_p2() {
    indvar_flatten_next_fu_234_p2 = (!indvar_flatten_reg_176.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(indvar_flatten_reg_176.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void yuv_scale::thread_out_channels_ch1_address0() {
    out_channels_ch1_address0 =  (sc_lv<22>) (ap_reg_pp0_iter6_tmp_10_cast_reg_456.read());
}

void yuv_scale::thread_out_channels_ch1_ce0() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read())))) {
        out_channels_ch1_ce0 = ap_const_logic_1;
    } else {
        out_channels_ch1_ce0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_out_channels_ch1_d0() {
    out_channels_ch1_d0 = tmp_4_reg_493.read();
}

void yuv_scale::thread_out_channels_ch1_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter6_exitcond_flatten_reg_416.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()))) {
        out_channels_ch1_we0 = ap_const_logic_1;
    } else {
        out_channels_ch1_we0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_out_channels_ch2_address0() {
    out_channels_ch2_address0 =  (sc_lv<22>) (ap_reg_pp0_iter6_tmp_10_cast_reg_456.read());
}

void yuv_scale::thread_out_channels_ch2_ce0() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read())))) {
        out_channels_ch2_ce0 = ap_const_logic_1;
    } else {
        out_channels_ch2_ce0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_out_channels_ch2_d0() {
    out_channels_ch2_d0 = tmp_6_reg_498.read();
}

void yuv_scale::thread_out_channels_ch2_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter6_exitcond_flatten_reg_416.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()))) {
        out_channels_ch2_we0 = ap_const_logic_1;
    } else {
        out_channels_ch2_we0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_out_channels_ch3_address0() {
    out_channels_ch3_address0 =  (sc_lv<22>) (ap_reg_pp0_iter6_tmp_10_cast_reg_456.read());
}

void yuv_scale::thread_out_channels_ch3_ce0() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read())))) {
        out_channels_ch3_ce0 = ap_const_logic_1;
    } else {
        out_channels_ch3_ce0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_out_channels_ch3_d0() {
    out_channels_ch3_d0 = tmp_9_reg_503.read();
}

void yuv_scale::thread_out_channels_ch3_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter6_exitcond_flatten_reg_416.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()))) {
        out_channels_ch3_we0 = ap_const_logic_1;
    } else {
        out_channels_ch3_we0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_p_shl1_cast_fu_282_p3() {
    p_shl1_cast_fu_282_p3 = esl_concat<15,8>(tmp_1_reg_441.read(), ap_const_lv8_0);
}

void yuv_scale::thread_p_shl_cast_fu_275_p3() {
    p_shl_cast_fu_275_p3 = esl_concat<13,10>(tmp_reg_436.read(), ap_const_lv10_0);
}

void yuv_scale::thread_tmp_10_cast_fu_309_p1() {
    tmp_10_cast_fu_309_p1 = esl_zext<32,23>(tmp_5_reg_446.read());
}

void yuv_scale::thread_tmp_1_cast_fu_213_p1() {
    tmp_1_cast_fu_213_p1 = esl_zext<15,8>(U_scale.read());
}

void yuv_scale::thread_tmp_1_fu_271_p1() {
    tmp_1_fu_271_p1 = tmp_3_mid2_v_fu_259_p3.read().range(15-1, 0);
}

void yuv_scale::thread_tmp_2_cast_fu_217_p1() {
    tmp_2_cast_fu_217_p1 = esl_zext<15,8>(V_scale.read());
}

void yuv_scale::thread_tmp_3_fu_289_p2() {
    tmp_3_fu_289_p2 = (!p_shl_cast_fu_275_p3.read().is_01() || !p_shl1_cast_fu_282_p3.read().is_01())? sc_lv<23>(): (sc_biguint<23>(p_shl_cast_fu_275_p3.read()) + sc_biguint<23>(p_shl1_cast_fu_282_p3.read()));
}

void yuv_scale::thread_tmp_3_mid2_v_fu_259_p3() {
    tmp_3_mid2_v_fu_259_p3 = (!exitcond3_fu_246_p2.read()[0].is_01())? sc_lv<16>(): ((exitcond3_fu_246_p2.read()[0].to_bool())? x_1_fu_240_p2.read(): x_phi_fu_191_p4.read());
}

void yuv_scale::thread_tmp_5_cast_fu_295_p1() {
    tmp_5_cast_fu_295_p1 = esl_zext<23,16>(y_mid2_reg_425.read());
}

void yuv_scale::thread_tmp_5_fu_298_p2() {
    tmp_5_fu_298_p2 = (!tmp_5_cast_fu_295_p1.read().is_01() || !tmp_3_fu_289_p2.read().is_01())? sc_lv<23>(): (sc_biguint<23>(tmp_5_cast_fu_295_p1.read()) + sc_biguint<23>(tmp_3_fu_289_p2.read()));
}

void yuv_scale::thread_tmp_7_fu_318_p0() {
    tmp_7_fu_318_p0 =  (sc_lv<8>) (tmp_7_fu_318_p00.read());
}

void yuv_scale::thread_tmp_7_fu_318_p00() {
    tmp_7_fu_318_p00 = esl_zext<15,8>(Y_reg_478.read());
}

void yuv_scale::thread_tmp_7_fu_318_p1() {
    tmp_7_fu_318_p1 =  (sc_lv<8>) (tmp_cast_reg_396.read());
}

void yuv_scale::thread_tmp_7_fu_318_p2() {
    tmp_7_fu_318_p2 = (!tmp_7_fu_318_p0.read().is_01() || !tmp_7_fu_318_p1.read().is_01())? sc_lv<15>(): sc_biguint<8>(tmp_7_fu_318_p0.read()) * sc_biguint<8>(tmp_7_fu_318_p1.read());
}

void yuv_scale::thread_tmp_8_fu_334_p0() {
    tmp_8_fu_334_p0 =  (sc_lv<8>) (tmp_8_fu_334_p00.read());
}

void yuv_scale::thread_tmp_8_fu_334_p00() {
    tmp_8_fu_334_p00 = esl_zext<15,8>(V_reg_488.read());
}

void yuv_scale::thread_tmp_8_fu_334_p1() {
    tmp_8_fu_334_p1 =  (sc_lv<8>) (tmp_2_cast_reg_406.read());
}

void yuv_scale::thread_tmp_8_fu_334_p2() {
    tmp_8_fu_334_p2 = (!tmp_8_fu_334_p0.read().is_01() || !tmp_8_fu_334_p1.read().is_01())? sc_lv<15>(): sc_biguint<8>(tmp_8_fu_334_p0.read()) * sc_biguint<8>(tmp_8_fu_334_p1.read());
}

void yuv_scale::thread_tmp_cast_fu_209_p1() {
    tmp_cast_fu_209_p1 = esl_zext<15,8>(Y_scale.read());
}

void yuv_scale::thread_tmp_fu_267_p1() {
    tmp_fu_267_p1 = tmp_3_mid2_v_fu_259_p3.read().range(13-1, 0);
}

void yuv_scale::thread_tmp_s_fu_326_p0() {
    tmp_s_fu_326_p0 =  (sc_lv<8>) (tmp_s_fu_326_p00.read());
}

void yuv_scale::thread_tmp_s_fu_326_p00() {
    tmp_s_fu_326_p00 = esl_zext<15,8>(U_reg_483.read());
}

void yuv_scale::thread_tmp_s_fu_326_p1() {
    tmp_s_fu_326_p1 =  (sc_lv<8>) (tmp_1_cast_reg_401.read());
}

void yuv_scale::thread_tmp_s_fu_326_p2() {
    tmp_s_fu_326_p2 = (!tmp_s_fu_326_p0.read().is_01() || !tmp_s_fu_326_p1.read().is_01())? sc_lv<15>(): sc_biguint<8>(tmp_s_fu_326_p0.read()) * sc_biguint<8>(tmp_s_fu_326_p1.read());
}

void yuv_scale::thread_x_1_fu_240_p2() {
    x_1_fu_240_p2 = (!ap_const_lv16_1.is_01() || !x_phi_fu_191_p4.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_1) + sc_biguint<16>(x_phi_fu_191_p4.read()));
}

void yuv_scale::thread_x_phi_fu_191_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_416.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0))) {
        x_phi_fu_191_p4 = tmp_3_mid2_v_reg_431.read();
    } else {
        x_phi_fu_191_p4 = x_reg_187.read();
    }
}

void yuv_scale::thread_y_1_fu_304_p2() {
    y_1_fu_304_p2 = (!ap_const_lv16_1.is_01() || !y_mid2_reg_425.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_1) + sc_biguint<16>(y_mid2_reg_425.read()));
}

void yuv_scale::thread_y_mid2_fu_251_p3() {
    y_mid2_fu_251_p3 = (!exitcond3_fu_246_p2.read()[0].is_01())? sc_lv<16>(): ((exitcond3_fu_246_p2.read()[0].to_bool())? ap_const_lv16_0: y_phi_fu_202_p4.read());
}

void yuv_scale::thread_y_phi_fu_202_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_416.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0))) {
        y_phi_fu_202_p4 = y_1_fu_304_p2.read();
    } else {
        y_phi_fu_202_p4 = y_reg_198.read();
    }
}

void yuv_scale::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter7.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_229_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter7.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond_flatten_fu_229_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

