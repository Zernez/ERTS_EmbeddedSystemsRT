

================================================================
== Vivado HLS Report for 'yuv2rgb'
================================================================
* Date:           Sun Oct  9 14:05:08 2022

* Version:        2017.2 (Build 1909853 on Thu Jun 15 18:55:24 MDT 2017)
* Project:        yuv_filter.prj
* Solution:       solution2
* Product family: zynq
* Target device:  xc7z010clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   8.00|      8.85|        1.00|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+---------+-------+---------+---------+
    |     Latency     |     Interval    | Pipeline|
    |  min  |   max   |  min  |   max   |   Type  |
    +-------+---------+-------+---------+---------+
    |  40011|  2457611|  40011|  2457611|   none  |
    +-------+---------+-------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------+-------+---------+----------+-----------+-----------+-----------------+----------+
        |                                 |     Latency     | Iteration|  Initiation Interval  |       Trip      |          |
        |            Loop Name            |  min  |   max   |  Latency |  achieved |   target  |      Count      | Pipelined|
        +---------------------------------+-------+---------+----------+-----------+-----------+-----------------+----------+
        |- YUV2RGB_LOOP_X_YUV2RGB_LOOP_Y  |  40009|  2457609|        11|          1|          1| 40000 ~ 2457600 |    yes   |
        +---------------------------------+-------+---------+----------+-----------+-----------+-----------------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 11


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 13
* Pipeline: 1
  Pipeline-0: II = 1, D = 11, States = { 2 3 4 5 6 7 8 9 10 11 12 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	13  / (exitcond_flatten)
	3  / (!exitcond_flatten)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	2  / true
13 --> 
* FSM state operations: 

 <State 1>: 6.38ns
ST_1: in_height_read_2 (9)  [1/1] 0.00ns
:0  %in_height_read_2 = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %in_height_read)

ST_1: in_width_read_2 (10)  [1/1] 0.00ns
:1  %in_width_read_2 = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %in_width_read)

ST_1: cast (11)  [1/1] 0.00ns
:2  %cast = zext i16 %in_width_read_2 to i32

ST_1: cast1 (12)  [1/1] 0.00ns
:3  %cast1 = zext i16 %in_height_read_2 to i32

ST_1: bound (13)  [1/1] 6.38ns
:4  %bound = mul i32 %cast1, %cast

ST_1: StgValue_19 (14)  [1/1] 1.59ns  loc: yuv_filter.c:89
:5  br label %1


 <State 2>: 5.10ns
ST_2: indvar_flatten (16)  [1/1] 0.00ns
:0  %indvar_flatten = phi i32 [ 0, %0 ], [ %indvar_flatten_next, %.reset ]

ST_2: x (17)  [1/1] 0.00ns  loc: yuv_filter.c:94
:1  %x = phi i16 [ 0, %0 ], [ %tmp_mid2_v, %.reset ]

ST_2: y (18)  [1/1] 0.00ns
:2  %y = phi i16 [ 0, %0 ], [ %y_2, %.reset ]

ST_2: StgValue_23 (19)  [1/1] 0.00ns  loc: yuv_filter.c:90
:3  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_2: exitcond_flatten (20)  [1/1] 3.26ns
:4  %exitcond_flatten = icmp eq i32 %indvar_flatten, %bound

ST_2: indvar_flatten_next (21)  [1/1] 2.90ns
:5  %indvar_flatten_next = add i32 %indvar_flatten, 1

ST_2: StgValue_26 (22)  [1/1] 0.00ns
:6  br i1 %exitcond_flatten, label %2, label %.reset

ST_2: x_2 (24)  [1/1] 2.39ns  loc: yuv_filter.c:89
.reset:0  %x_2 = add i16 1, %x

ST_2: exitcond5 (28)  [1/1] 3.03ns  loc: yuv_filter.c:92
.reset:4  %exitcond5 = icmp eq i16 %y, %in_height_read_2

ST_2: y_mid2 (29)  [1/1] 2.07ns  loc: yuv_filter.c:92
.reset:5  %y_mid2 = select i1 %exitcond5, i16 0, i16 %y

ST_2: tmp_mid2_v (31)  [1/1] 2.07ns  loc: yuv_filter.c:94
.reset:7  %tmp_mid2_v = select i1 %exitcond5, i16 %x_2, i16 %x

ST_2: tmp (32)  [1/1] 0.00ns  loc: yuv_filter.c:94
.reset:8  %tmp = trunc i16 %tmp_mid2_v to i13

ST_2: tmp_2 (34)  [1/1] 0.00ns  loc: yuv_filter.c:94
.reset:10  %tmp_2 = trunc i16 %tmp_mid2_v to i15


 <State 3>: 4.11ns
ST_3: p_shl2_cast (33)  [1/1] 0.00ns  loc: yuv_filter.c:94
.reset:9  %p_shl2_cast = call i23 @_ssdm_op_BitConcatenate.i23.i13.i10(i13 %tmp, i10 0)

ST_3: p_shl3_cast (35)  [1/1] 0.00ns  loc: yuv_filter.c:94
.reset:11  %p_shl3_cast = call i23 @_ssdm_op_BitConcatenate.i23.i15.i8(i15 %tmp_2, i8 0)

ST_3: tmp_s (36)  [1/1] 2.05ns  loc: yuv_filter.c:94
.reset:12  %tmp_s = add i23 %p_shl3_cast, %p_shl2_cast

ST_3: tmp_cast (38)  [1/1] 0.00ns  loc: yuv_filter.c:94
.reset:14  %tmp_cast = zext i16 %y_mid2 to i23

ST_3: tmp_8 (39)  [1/1] 2.05ns  loc: yuv_filter.c:94
.reset:15  %tmp_8 = add i23 %tmp_s, %tmp_cast

ST_3: y_2 (99)  [1/1] 2.39ns  loc: yuv_filter.c:92
.reset:75  %y_2 = add i16 1, %y_mid2


 <State 4>: 3.25ns
ST_4: tmp_28_cast (40)  [1/1] 0.00ns  loc: yuv_filter.c:94
.reset:16  %tmp_28_cast = zext i23 %tmp_8 to i32

ST_4: in_channels_ch3_addr (43)  [1/1] 0.00ns  loc: yuv_filter.c:96
.reset:19  %in_channels_ch3_addr = getelementptr [2457600 x i8]* %in_channels_ch3, i32 0, i32 %tmp_28_cast

ST_4: V (49)  [4/4] 3.25ns  loc: yuv_filter.c:96
.reset:25  %V = load i8* %in_channels_ch3_addr, align 1


 <State 5>: 3.25ns
ST_5: in_channels_ch1_addr (41)  [1/1] 0.00ns  loc: yuv_filter.c:94
.reset:17  %in_channels_ch1_addr = getelementptr [2457600 x i8]* %in_channels_ch1, i32 0, i32 %tmp_28_cast

ST_5: in_channels_ch2_addr (42)  [1/1] 0.00ns  loc: yuv_filter.c:95
.reset:18  %in_channels_ch2_addr = getelementptr [2457600 x i8]* %in_channels_ch2, i32 0, i32 %tmp_28_cast

ST_5: Y (47)  [4/4] 3.25ns  loc: yuv_filter.c:94
.reset:23  %Y = load i8* %in_channels_ch1_addr, align 1

ST_5: U (48)  [4/4] 3.25ns  loc: yuv_filter.c:95
.reset:24  %U = load i8* %in_channels_ch2_addr, align 1

ST_5: V (49)  [3/4] 3.25ns  loc: yuv_filter.c:96
.reset:25  %V = load i8* %in_channels_ch3_addr, align 1


 <State 6>: 3.25ns
ST_6: Y (47)  [3/4] 3.25ns  loc: yuv_filter.c:94
.reset:23  %Y = load i8* %in_channels_ch1_addr, align 1

ST_6: U (48)  [3/4] 3.25ns  loc: yuv_filter.c:95
.reset:24  %U = load i8* %in_channels_ch2_addr, align 1

ST_6: V (49)  [2/4] 3.25ns  loc: yuv_filter.c:96
.reset:25  %V = load i8* %in_channels_ch3_addr, align 1


 <State 7>: 5.32ns
ST_7: Y (47)  [2/4] 3.25ns  loc: yuv_filter.c:94
.reset:23  %Y = load i8* %in_channels_ch1_addr, align 1

ST_7: U (48)  [2/4] 3.25ns  loc: yuv_filter.c:95
.reset:24  %U = load i8* %in_channels_ch2_addr, align 1

ST_7: V (49)  [1/4] 3.25ns  loc: yuv_filter.c:96
.reset:25  %V = load i8* %in_channels_ch3_addr, align 1

ST_7: E (53)  [1/1] 2.07ns  loc: yuv_filter.c:99
.reset:29  %E = xor i8 %V, -128


 <State 8>: 6.77ns
ST_8: Y (47)  [1/4] 3.25ns  loc: yuv_filter.c:94
.reset:23  %Y = load i8* %in_channels_ch1_addr, align 1

ST_8: U (48)  [1/4] 3.25ns  loc: yuv_filter.c:95
.reset:24  %U = load i8* %in_channels_ch2_addr, align 1

ST_8: D (52)  [1/1] 2.07ns  loc: yuv_filter.c:98
.reset:28  %D = xor i8 %U, -128

ST_8: tmp_18_cast5 (56)  [1/1] 0.00ns  loc: yuv_filter.c:101
.reset:32  %tmp_18_cast5 = sext i8 %E to i17

ST_8: tmp_14 (71)  [1/1] 6.77ns  loc: yuv_filter.c:101
.reset:47  %tmp_14 = mul i17 -208, %tmp_18_cast5


 <State 9>: 8.85ns
ST_9: tmp_13_cast (50)  [1/1] 0.00ns  loc: yuv_filter.c:97
.reset:26  %tmp_13_cast = zext i8 %Y to i9

ST_9: C (51)  [1/1] 0.00ns  loc: yuv_filter.c:97
.reset:27  %C = add i9 -16, %tmp_13_cast

ST_9: tmp_16_cast (54)  [1/1] 0.00ns  loc: yuv_filter.c:100
.reset:30  %tmp_16_cast = sext i9 %C to i18

ST_9: tmp_4 (55)  [1/1] 3.36ns  loc: yuv_filter.c:100
.reset:31  %tmp_4 = mul i18 298, %tmp_16_cast

ST_9: tmp_10 (59)  [1/1] 3.02ns  loc: yuv_filter.c:100
.reset:35  %tmp_10 = add i18 128, %tmp_4

ST_9: tmp_26_cast4_cast (68)  [1/1] 0.00ns  loc: yuv_filter.c:101
.reset:44  %tmp_26_cast4_cast = sext i8 %D to i16

ST_9: tmp_13 (69)  [1/1] 3.36ns  loc: yuv_filter.c:101
.reset:45  %tmp_13 = mul i16 -100, %tmp_26_cast4_cast

ST_9: tmp_14_cast (70)  [1/1] 0.00ns  loc: yuv_filter.c:101
.reset:46  %tmp_14_cast = sext i16 %tmp_13 to i17

ST_9: tmp1 (72)  [1/1] 3.02ns  loc: yuv_filter.c:101
.reset:48  %tmp1 = add i17 %tmp_14, %tmp_14_cast

ST_9: p_shl1 (84)  [1/1] 0.00ns  loc: yuv_filter.c:102
.reset:60  %p_shl1 = call i10 @_ssdm_op_BitConcatenate.i10.i8.i2(i8 %D, i2 0)

ST_9: p_shl1_cast (85)  [1/1] 0.00ns  loc: yuv_filter.c:102
.reset:61  %p_shl1_cast = sext i10 %p_shl1 to i18

ST_9: tmp2 (86)  [1/1] 2.47ns  loc: yuv_filter.c:102
.reset:62  %tmp2 = add i18 %tmp_10, %p_shl1_cast


 <State 10>: 8.45ns
ST_10: tmp_18_cast (57)  [1/1] 0.00ns  loc: yuv_filter.c:100
.reset:33  %tmp_18_cast = sext i8 %E to i18

ST_10: tmp_7 (58)  [1/1] 3.36ns  loc: yuv_filter.c:100
.reset:34  %tmp_7 = mul i18 409, %tmp_18_cast

ST_10: tmp_11 (60)  [1/1] 3.02ns  loc: yuv_filter.c:100
.reset:36  %tmp_11 = add i18 %tmp_7, %tmp_10

ST_10: tmp_5 (61)  [1/1] 0.00ns  loc: yuv_filter.c:100
.reset:37  %tmp_5 = call i2 @_ssdm_op_PartSelect.i2.i18.i32.i32(i18 %tmp_11, i32 16, i32 17)

ST_10: icmp (62)  [1/1] 2.07ns  loc: yuv_filter.c:100
.reset:38  %icmp = icmp eq i2 %tmp_5, 1

ST_10: tmp1_cast (73)  [1/1] 0.00ns  loc: yuv_filter.c:101
.reset:49  %tmp1_cast = sext i17 %tmp1 to i18

ST_10: tmp_15 (74)  [1/1] 2.47ns  loc: yuv_filter.c:101
.reset:50  %tmp_15 = add i18 %tmp_10, %tmp1_cast

ST_10: tmp_16 (75)  [1/1] 0.00ns  loc: yuv_filter.c:101
.reset:51  %tmp_16 = call i2 @_ssdm_op_PartSelect.i2.i18.i32.i32(i18 %tmp_15, i32 16, i32 17)

ST_10: icmp1 (76)  [1/1] 2.07ns  loc: yuv_filter.c:101
.reset:52  %icmp1 = icmp eq i2 %tmp_16, 1

ST_10: tmp_17 (77)  [1/1] 0.00ns  loc: yuv_filter.c:101 (grouped into LUT with out node G)
.reset:53  %tmp_17 = call i1 @_ssdm_op_BitSelect.i1.i18.i32(i18 %tmp_15, i32 17)

ST_10: phitmp2 (78)  [1/1] 0.00ns  loc: yuv_filter.c:101 (grouped into LUT with out node G)
.reset:54  %phitmp2 = call i8 @_ssdm_op_PartSelect.i8.i18.i32.i32(i18 %tmp_15, i32 8, i32 15)

ST_10: p_phitmp2 (79)  [1/1] 0.00ns  loc: yuv_filter.c:101 (grouped into LUT with out node G)
.reset:55  %p_phitmp2 = select i1 %icmp1, i8 -1, i8 0

ST_10: tmp_6 (80)  [1/1] 0.00ns  loc: yuv_filter.c:101 (grouped into LUT with out node G)
.reset:56  %tmp_6 = or i1 %icmp1, %tmp_17

ST_10: G (81)  [1/1] 2.07ns  loc: yuv_filter.c:101 (out node of the LUT)
.reset:57  %G = select i1 %tmp_6, i8 %p_phitmp2, i8 %phitmp2

ST_10: p_shl (82)  [1/1] 0.00ns  loc: yuv_filter.c:102
.reset:58  %p_shl = call i17 @_ssdm_op_BitConcatenate.i17.i8.i9(i8 %D, i9 0)

ST_10: p_shl_cast (83)  [1/1] 0.00ns  loc: yuv_filter.c:102
.reset:59  %p_shl_cast = sext i17 %p_shl to i19

ST_10: tmp2_cast (87)  [1/1] 0.00ns  loc: yuv_filter.c:102
.reset:63  %tmp2_cast = sext i18 %tmp2 to i19

ST_10: tmp_18 (88)  [1/1] 2.47ns  loc: yuv_filter.c:102
.reset:64  %tmp_18 = add i19 %p_shl_cast, %tmp2_cast

ST_10: tmp_19 (89)  [1/1] 0.00ns  loc: yuv_filter.c:102
.reset:65  %tmp_19 = call i3 @_ssdm_op_PartSelect.i3.i19.i32.i32(i19 %tmp_18, i32 16, i32 18)

ST_10: icmp2 (90)  [1/1] 2.07ns  loc: yuv_filter.c:102
.reset:66  %icmp2 = icmp sgt i3 %tmp_19, 0

ST_10: tmp_20 (91)  [1/1] 0.00ns  loc: yuv_filter.c:102 (grouped into LUT with out node B)
.reset:67  %tmp_20 = call i1 @_ssdm_op_BitSelect.i1.i19.i32(i19 %tmp_18, i32 18)

ST_10: phitmp3 (92)  [1/1] 0.00ns  loc: yuv_filter.c:102 (grouped into LUT with out node B)
.reset:68  %phitmp3 = call i8 @_ssdm_op_PartSelect.i8.i19.i32.i32(i19 %tmp_18, i32 8, i32 15)

ST_10: p_phitmp3 (93)  [1/1] 0.00ns  loc: yuv_filter.c:102 (grouped into LUT with out node B)
.reset:69  %p_phitmp3 = select i1 %icmp2, i8 -1, i8 0

ST_10: tmp_9 (94)  [1/1] 0.00ns  loc: yuv_filter.c:102 (grouped into LUT with out node B)
.reset:70  %tmp_9 = or i1 %icmp2, %tmp_20

ST_10: B (95)  [1/1] 2.07ns  loc: yuv_filter.c:102 (out node of the LUT)
.reset:71  %B = select i1 %tmp_9, i8 %p_phitmp3, i8 %phitmp3


 <State 11>: 5.32ns
ST_11: out_channels_ch1_add (44)  [1/1] 0.00ns  loc: yuv_filter.c:103
.reset:20  %out_channels_ch1_add = getelementptr [2457600 x i8]* %out_channels_ch1, i32 0, i32 %tmp_28_cast

ST_11: out_channels_ch2_add (45)  [1/1] 0.00ns  loc: yuv_filter.c:104
.reset:21  %out_channels_ch2_add = getelementptr [2457600 x i8]* %out_channels_ch2, i32 0, i32 %tmp_28_cast

ST_11: out_channels_ch3_add (46)  [1/1] 0.00ns  loc: yuv_filter.c:105
.reset:22  %out_channels_ch3_add = getelementptr [2457600 x i8]* %out_channels_ch3, i32 0, i32 %tmp_28_cast

ST_11: tmp_12 (63)  [1/1] 0.00ns  loc: yuv_filter.c:100 (grouped into LUT with out node R)
.reset:39  %tmp_12 = call i1 @_ssdm_op_BitSelect.i1.i18.i32(i18 %tmp_11, i32 17)

ST_11: phitmp (64)  [1/1] 0.00ns  loc: yuv_filter.c:100 (grouped into LUT with out node R)
.reset:40  %phitmp = call i8 @_ssdm_op_PartSelect.i8.i18.i32.i32(i18 %tmp_11, i32 8, i32 15)

ST_11: p_phitmp (65)  [1/1] 0.00ns  loc: yuv_filter.c:100 (grouped into LUT with out node R)
.reset:41  %p_phitmp = select i1 %icmp, i8 -1, i8 0

ST_11: tmp_3 (66)  [1/1] 0.00ns  loc: yuv_filter.c:100 (grouped into LUT with out node R)
.reset:42  %tmp_3 = or i1 %icmp, %tmp_12

ST_11: R (67)  [1/1] 2.07ns  loc: yuv_filter.c:100 (out node of the LUT)
.reset:43  %R = select i1 %tmp_3, i8 %p_phitmp, i8 %phitmp

ST_11: StgValue_104 (96)  [2/2] 3.25ns  loc: yuv_filter.c:103
.reset:72  store i8 %R, i8* %out_channels_ch1_add, align 1

ST_11: StgValue_105 (97)  [2/2] 3.25ns  loc: yuv_filter.c:104
.reset:73  store i8 %G, i8* %out_channels_ch2_add, align 1

ST_11: StgValue_106 (98)  [2/2] 3.25ns  loc: yuv_filter.c:105
.reset:74  store i8 %B, i8* %out_channels_ch3_add, align 1


 <State 12>: 3.25ns
ST_12: StgValue_107 (25)  [1/1] 0.00ns  loc: yuv_filter.c:90
.reset:1  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_12: StgValue_108 (26)  [1/1] 0.00ns
.reset:2  call void (...)* @_ssdm_op_SpecLoopName([30 x i8]* @YUV2RGB_LOOP_X_YUV2R)

ST_12: StgValue_109 (27)  [1/1] 0.00ns
.reset:3  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 40000, i64 2457600, i64 784400)

ST_12: StgValue_110 (30)  [1/1] 0.00ns  loc: yuv_filter.c:90
.reset:6  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_12: StgValue_111 (37)  [1/1] 0.00ns  loc: yuv_filter.c:92
.reset:13  call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @p_str4) nounwind

ST_12: StgValue_112 (96)  [1/2] 3.25ns  loc: yuv_filter.c:103
.reset:72  store i8 %R, i8* %out_channels_ch1_add, align 1

ST_12: StgValue_113 (97)  [1/2] 3.25ns  loc: yuv_filter.c:104
.reset:73  store i8 %G, i8* %out_channels_ch2_add, align 1

ST_12: StgValue_114 (98)  [1/2] 3.25ns  loc: yuv_filter.c:105
.reset:74  store i8 %B, i8* %out_channels_ch3_add, align 1

ST_12: StgValue_115 (100)  [1/1] 0.00ns  loc: yuv_filter.c:92
.reset:76  br label %1


 <State 13>: 0.00ns
ST_13: mrv (102)  [1/1] 0.00ns  loc: yuv_filter.c:108
:0  %mrv = insertvalue { i16, i16 } undef, i16 %in_width_read_2, 0

ST_13: mrv_1 (103)  [1/1] 0.00ns  loc: yuv_filter.c:108
:1  %mrv_1 = insertvalue { i16, i16 } %mrv, i16 %in_height_read_2, 1

ST_13: StgValue_118 (104)  [1/1] 0.00ns  loc: yuv_filter.c:108
:2  ret { i16, i16 } %mrv_1



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8ns, clock uncertainty: 1ns.

 <State 1>: 6.38ns
The critical path consists of the following:
	wire read on port 'in_height_read' [9]  (0 ns)
	'mul' operation ('bound') [13]  (6.38 ns)

 <State 2>: 5.1ns
The critical path consists of the following:
	'phi' operation ('y') with incoming values : ('y', yuv_filter.c:92) [18]  (0 ns)
	'icmp' operation ('exitcond5', yuv_filter.c:92) [28]  (3.03 ns)
	'select' operation ('tmp_mid2_v', yuv_filter.c:94) [31]  (2.07 ns)

 <State 3>: 4.11ns
The critical path consists of the following:
	'add' operation ('tmp_s', yuv_filter.c:94) [36]  (2.05 ns)
	'add' operation ('tmp_8', yuv_filter.c:94) [39]  (2.05 ns)

 <State 4>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('in_channels_ch3_addr', yuv_filter.c:96) [43]  (0 ns)
	'load' operation ('V', yuv_filter.c:96) on array 'in_channels_ch3' [49]  (3.25 ns)

 <State 5>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('in_channels_ch1_addr', yuv_filter.c:94) [41]  (0 ns)
	'load' operation ('Y', yuv_filter.c:94) on array 'in_channels_ch1' [47]  (3.25 ns)

 <State 6>: 3.25ns
The critical path consists of the following:
	'load' operation ('Y', yuv_filter.c:94) on array 'in_channels_ch1' [47]  (3.25 ns)

 <State 7>: 5.32ns
The critical path consists of the following:
	'load' operation ('V', yuv_filter.c:96) on array 'in_channels_ch3' [49]  (3.25 ns)
	'xor' operation ('E', yuv_filter.c:99) [53]  (2.07 ns)

 <State 8>: 6.77ns
The critical path consists of the following:
	'mul' operation ('tmp_14', yuv_filter.c:101) [71]  (6.77 ns)

 <State 9>: 8.85ns
The critical path consists of the following:
	'add' operation ('C', yuv_filter.c:97) [51]  (0 ns)
	'mul' operation ('tmp_4', yuv_filter.c:100) [55]  (3.36 ns)
	'add' operation ('tmp_10', yuv_filter.c:100) [59]  (3.02 ns)
	'add' operation ('tmp2', yuv_filter.c:102) [86]  (2.47 ns)

 <State 10>: 8.45ns
The critical path consists of the following:
	'mul' operation ('tmp_7', yuv_filter.c:100) [58]  (3.36 ns)
	'add' operation ('tmp_11', yuv_filter.c:100) [60]  (3.02 ns)
	'icmp' operation ('icmp', yuv_filter.c:100) [62]  (2.07 ns)

 <State 11>: 5.32ns
The critical path consists of the following:
	'or' operation ('tmp_3', yuv_filter.c:100) [66]  (0 ns)
	'select' operation ('R', yuv_filter.c:100) [67]  (2.07 ns)
	'store' operation (yuv_filter.c:103) of variable 'R', yuv_filter.c:100 on array 'out_channels_ch1' [96]  (3.25 ns)

 <State 12>: 3.25ns
The critical path consists of the following:
	'store' operation (yuv_filter.c:103) of variable 'R', yuv_filter.c:100 on array 'out_channels_ch1' [96]  (3.25 ns)

 <State 13>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
