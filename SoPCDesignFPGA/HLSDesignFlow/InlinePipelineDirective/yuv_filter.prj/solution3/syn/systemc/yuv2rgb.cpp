// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "yuv2rgb.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic yuv2rgb::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic yuv2rgb::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> yuv2rgb::ap_ST_fsm_state1 = "1";
const sc_lv<4> yuv2rgb::ap_ST_fsm_state2 = "10";
const sc_lv<4> yuv2rgb::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<4> yuv2rgb::ap_ST_fsm_state10 = "1000";
const sc_lv<32> yuv2rgb::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool yuv2rgb::ap_const_boolean_1 = true;
const sc_lv<32> yuv2rgb::ap_const_lv32_2 = "10";
const bool yuv2rgb::ap_const_boolean_0 = false;
const sc_lv<1> yuv2rgb::ap_const_lv1_0 = "0";
const sc_lv<32> yuv2rgb::ap_const_lv32_1 = "1";
const sc_lv<1> yuv2rgb::ap_const_lv1_1 = "1";
const sc_lv<16> yuv2rgb::ap_const_lv16_0 = "0000000000000000";
const sc_lv<16> yuv2rgb::ap_const_lv16_1 = "1";
const sc_lv<10> yuv2rgb::ap_const_lv10_0 = "0000000000";
const sc_lv<8> yuv2rgb::ap_const_lv8_0 = "00000000";
const sc_lv<8> yuv2rgb::ap_const_lv8_80 = "10000000";
const sc_lv<17> yuv2rgb::ap_const_lv17_1FF30 = "11111111100110000";
const sc_lv<9> yuv2rgb::ap_const_lv9_0 = "000000000";
const sc_lv<2> yuv2rgb::ap_const_lv2_0 = "00";
const sc_lv<32> yuv2rgb::ap_const_lv32_10 = "10000";
const sc_lv<32> yuv2rgb::ap_const_lv32_11 = "10001";
const sc_lv<2> yuv2rgb::ap_const_lv2_1 = "1";
const sc_lv<32> yuv2rgb::ap_const_lv32_8 = "1000";
const sc_lv<32> yuv2rgb::ap_const_lv32_F = "1111";
const sc_lv<8> yuv2rgb::ap_const_lv8_FF = "11111111";
const sc_lv<32> yuv2rgb::ap_const_lv32_12 = "10010";
const sc_lv<3> yuv2rgb::ap_const_lv3_0 = "000";
const sc_lv<9> yuv2rgb::ap_const_lv9_1F0 = "111110000";
const sc_lv<18> yuv2rgb::ap_const_lv18_12A = "100101010";
const sc_lv<18> yuv2rgb::ap_const_lv18_80 = "10000000";
const sc_lv<16> yuv2rgb::ap_const_lv16_FF9C = "1111111110011100";
const sc_lv<18> yuv2rgb::ap_const_lv18_199 = "110011001";
const sc_lv<32> yuv2rgb::ap_const_lv32_3 = "11";

yuv2rgb::yuv2rgb(sc_module_name name) : sc_module(name), mVcdFile(0) {
    yuv_filter_mul_mubkb_x_U36 = new yuv_filter_mul_mubkb<1,1,16,16,32>("yuv_filter_mul_mubkb_x_U36");
    yuv_filter_mul_mubkb_x_U36->din0(bound_fu_566_p0);
    yuv_filter_mul_mubkb_x_U36->din1(bound_fu_566_p1);
    yuv_filter_mul_mubkb_x_U36->dout(bound_fu_566_p2);
    yuv_filter_ama_adg8j_U37 = new yuv_filter_ama_adg8j<1,1,5,8,10,9,18>("yuv_filter_ama_adg8j_U37");
    yuv_filter_ama_adg8j_U37->din0(grp_fu_572_p0);
    yuv_filter_ama_adg8j_U37->din1(grp_fu_572_p1);
    yuv_filter_ama_adg8j_U37->din2(grp_fu_572_p2);
    yuv_filter_ama_adg8j_U37->din3(grp_fu_572_p3);
    yuv_filter_ama_adg8j_U37->dout(grp_fu_572_p4);
    yuv_filter_mac_muhbi_U38 = new yuv_filter_mac_muhbi<1,1,8,8,17,17>("yuv_filter_mac_muhbi_U38");
    yuv_filter_mac_muhbi_U38->din0(grp_fu_582_p0);
    yuv_filter_mac_muhbi_U38->din1(D_reg_671);
    yuv_filter_mac_muhbi_U38->din2(tmp_11_reg_678);
    yuv_filter_mac_muhbi_U38->dout(grp_fu_582_p3);
    yuv_filter_mac_muibs_U39 = new yuv_filter_mac_muibs<1,1,10,8,18,18>("yuv_filter_mac_muibs_U39");
    yuv_filter_mac_muibs_U39->din0(grp_fu_589_p0);
    yuv_filter_mac_muibs_U39->din1(ap_reg_pp0_iter3_E_reg_660);
    yuv_filter_mac_muibs_U39->din2(tmp_5_reg_683);
    yuv_filter_mac_muibs_U39->dout(grp_fu_589_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_B_fu_515_p3);
    sensitive << ( tmp_21_fu_509_p2 );
    sensitive << ( p_phitmp3_fu_501_p3 );
    sensitive << ( phitmp3_fu_491_p4 );

    SC_METHOD(thread_D_fu_321_p2);
    sensitive << ( U_reg_655 );

    SC_METHOD(thread_E_fu_310_p2);
    sensitive << ( in_channels_ch3_dout );

    SC_METHOD(thread_G_fu_446_p3);
    sensitive << ( tmp_15_fu_440_p2 );
    sensitive << ( p_phitmp2_fu_432_p3 );
    sensitive << ( phitmp2_fu_422_p4 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011001);
    sensitive << ( in_channels_ch1_empty_n );
    sensitive << ( in_channels_ch2_empty_n );
    sensitive << ( in_channels_ch3_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_615 );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011011);
    sensitive << ( in_channels_ch1_empty_n );
    sensitive << ( in_channels_ch2_empty_n );
    sensitive << ( in_channels_ch3_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_615 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( in_width_empty_n );
    sensitive << ( in_height_empty_n );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);
    sensitive << ( in_channels_ch1_empty_n );
    sensitive << ( in_channels_ch2_empty_n );
    sensitive << ( in_channels_ch3_empty_n );
    sensitive << ( exitcond_flatten_reg_615 );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter6);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( exitcond_flatten_fu_235_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_bound_fu_566_p0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( bound_fu_566_p00 );

    SC_METHOD(thread_bound_fu_566_p00);
    sensitive << ( height_reg_603 );

    SC_METHOD(thread_bound_fu_566_p1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( bound_fu_566_p10 );

    SC_METHOD(thread_bound_fu_566_p10);
    sensitive << ( width_reg_597 );

    SC_METHOD(thread_exitcond_flatten_fu_235_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_196 );
    sensitive << ( bound_reg_610 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_fu_252_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( height_reg_603 );
    sensitive << ( exitcond_flatten_fu_235_p2 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( y_phi_fu_222_p4 );

    SC_METHOD(thread_grp_fu_572_p0);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_reg_pp0_iter2_exitcond_flatten_reg_615 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_grp_fu_572_p1);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_reg_pp0_iter2_exitcond_flatten_reg_615 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( grp_fu_572_p10 );

    SC_METHOD(thread_grp_fu_572_p10);
    sensitive << ( ap_reg_pp0_iter2_Y_reg_650 );

    SC_METHOD(thread_grp_fu_572_p2);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_reg_pp0_iter2_exitcond_flatten_reg_615 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_grp_fu_572_p3);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_reg_pp0_iter2_exitcond_flatten_reg_615 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_grp_fu_582_p0);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_reg_pp0_iter2_exitcond_flatten_reg_615 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_grp_fu_589_p0);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_615 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_icmp1_fu_408_p2);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_615 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_13_fu_398_p4 );

    SC_METHOD(thread_icmp2_fu_477_p2);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_615 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_19_fu_467_p4 );

    SC_METHOD(thread_icmp_fu_384_p2);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_615 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_2_fu_375_p4 );

    SC_METHOD(thread_in_channels_ch1_blk_n);
    sensitive << ( in_channels_ch1_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( exitcond_flatten_reg_615 );

    SC_METHOD(thread_in_channels_ch1_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_615 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_in_channels_ch2_blk_n);
    sensitive << ( in_channels_ch2_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( exitcond_flatten_reg_615 );

    SC_METHOD(thread_in_channels_ch2_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_615 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_in_channels_ch3_blk_n);
    sensitive << ( in_channels_ch3_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( exitcond_flatten_reg_615 );

    SC_METHOD(thread_in_channels_ch3_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_615 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_in_height_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_height_empty_n );

    SC_METHOD(thread_in_height_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_width_empty_n );
    sensitive << ( in_height_empty_n );

    SC_METHOD(thread_in_width_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_width_empty_n );

    SC_METHOD(thread_in_width_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_width_empty_n );
    sensitive << ( in_height_empty_n );

    SC_METHOD(thread_indvar_flatten_next_fu_240_p2);
    sensitive << ( indvar_flatten_reg_196 );

    SC_METHOD(thread_out_channels_ch1_address0);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_15_cast_fu_523_p1 );

    SC_METHOD(thread_out_channels_ch1_ce0);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_out_channels_ch1_d0);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_9_fu_552_p2 );
    sensitive << ( p_phitmp_fu_545_p3 );
    sensitive << ( phitmp_fu_536_p4 );

    SC_METHOD(thread_out_channels_ch1_we0);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_reg_pp0_iter4_exitcond_flatten_reg_615 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_out_channels_ch2_address0);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_15_cast_fu_523_p1 );

    SC_METHOD(thread_out_channels_ch2_ce0);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_out_channels_ch2_d0);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( G_reg_714 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_out_channels_ch2_we0);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_reg_pp0_iter4_exitcond_flatten_reg_615 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_out_channels_ch3_address0);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_15_cast_fu_523_p1 );

    SC_METHOD(thread_out_channels_ch3_ce0);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_out_channels_ch3_d0);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( B_reg_719 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_out_channels_ch3_we0);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_reg_pp0_iter4_exitcond_flatten_reg_615 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_out_height);
    sensitive << ( height_reg_603 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_out_height_ap_vld);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_out_width);
    sensitive << ( width_reg_597 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_out_width_ap_vld);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_p_phitmp2_fu_432_p3);
    sensitive << ( icmp1_fu_408_p2 );

    SC_METHOD(thread_p_phitmp3_fu_501_p3);
    sensitive << ( icmp2_fu_477_p2 );

    SC_METHOD(thread_p_phitmp_fu_545_p3);
    sensitive << ( icmp_reg_708 );

    SC_METHOD(thread_p_shl1_cast_fu_359_p1);
    sensitive << ( p_shl1_fu_352_p3 );

    SC_METHOD(thread_p_shl1_fu_352_p3);
    sensitive << ( D_reg_671 );

    SC_METHOD(thread_p_shl2_cast_fu_281_p3);
    sensitive << ( tmp_reg_635 );

    SC_METHOD(thread_p_shl3_cast_fu_288_p3);
    sensitive << ( tmp_1_reg_640 );

    SC_METHOD(thread_p_shl_cast_fu_348_p1);
    sensitive << ( p_shl_fu_341_p3 );

    SC_METHOD(thread_p_shl_fu_341_p3);
    sensitive << ( D_reg_671 );

    SC_METHOD(thread_phitmp2_fu_422_p4);
    sensitive << ( tmp_12_fu_393_p2 );

    SC_METHOD(thread_phitmp3_fu_491_p4);
    sensitive << ( tmp_17_fu_457_p2 );

    SC_METHOD(thread_phitmp_fu_536_p4);
    sensitive << ( tmp_6_reg_702 );

    SC_METHOD(thread_tmp1_cast_fu_390_p1);
    sensitive << ( tmp1_reg_691 );

    SC_METHOD(thread_tmp_11_fu_329_p1);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( E_reg_660 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_tmp_11_fu_329_p2);
    sensitive << ( tmp_11_fu_329_p1 );

    SC_METHOD(thread_tmp_12_fu_393_p2);
    sensitive << ( tmp_5_reg_683 );
    sensitive << ( tmp1_cast_fu_390_p1 );

    SC_METHOD(thread_tmp_13_fu_398_p4);
    sensitive << ( tmp_12_fu_393_p2 );

    SC_METHOD(thread_tmp_14_fu_414_p3);
    sensitive << ( tmp_12_fu_393_p2 );

    SC_METHOD(thread_tmp_15_cast_fu_523_p1);
    sensitive << ( ap_reg_pp0_iter4_tmp_s_reg_645 );

    SC_METHOD(thread_tmp_15_fu_440_p2);
    sensitive << ( icmp1_fu_408_p2 );
    sensitive << ( tmp_14_fu_414_p3 );

    SC_METHOD(thread_tmp_16_fu_363_p2);
    sensitive << ( p_shl_cast_fu_348_p1 );
    sensitive << ( p_shl1_cast_fu_359_p1 );

    SC_METHOD(thread_tmp_17_fu_457_p2);
    sensitive << ( tmp_5_reg_683 );
    sensitive << ( tmp_16_reg_696 );

    SC_METHOD(thread_tmp_18_fu_461_p2);
    sensitive << ( tmp_20_cast_fu_372_p1 );
    sensitive << ( tmp_35_cast_fu_454_p1 );

    SC_METHOD(thread_tmp_19_fu_467_p4);
    sensitive << ( tmp_18_fu_461_p2 );

    SC_METHOD(thread_tmp_1_fu_277_p1);
    sensitive << ( tmp_mid2_v_fu_265_p3 );

    SC_METHOD(thread_tmp_20_cast_fu_372_p1);
    sensitive << ( tmp_5_reg_683 );

    SC_METHOD(thread_tmp_20_fu_483_p3);
    sensitive << ( tmp_18_fu_461_p2 );

    SC_METHOD(thread_tmp_21_fu_509_p2);
    sensitive << ( icmp2_fu_477_p2 );
    sensitive << ( tmp_20_fu_483_p3 );

    SC_METHOD(thread_tmp_2_fu_375_p4);
    sensitive << ( grp_fu_589_p3 );

    SC_METHOD(thread_tmp_35_cast_fu_454_p1);
    sensitive << ( tmp_16_reg_696 );

    SC_METHOD(thread_tmp_7_fu_295_p2);
    sensitive << ( p_shl3_cast_fu_288_p3 );
    sensitive << ( p_shl2_cast_fu_281_p3 );

    SC_METHOD(thread_tmp_8_fu_529_p3);
    sensitive << ( tmp_6_reg_702 );

    SC_METHOD(thread_tmp_9_fu_552_p2);
    sensitive << ( icmp_reg_708 );
    sensitive << ( tmp_8_fu_529_p3 );

    SC_METHOD(thread_tmp_cast_fu_301_p1);
    sensitive << ( y_mid2_reg_624 );

    SC_METHOD(thread_tmp_fu_273_p1);
    sensitive << ( tmp_mid2_v_fu_265_p3 );

    SC_METHOD(thread_tmp_mid2_v_fu_265_p3);
    sensitive << ( x_phi_fu_211_p4 );
    sensitive << ( exitcond_fu_252_p2 );
    sensitive << ( x_1_fu_246_p2 );

    SC_METHOD(thread_tmp_s_fu_304_p2);
    sensitive << ( tmp_7_fu_295_p2 );
    sensitive << ( tmp_cast_fu_301_p1 );

    SC_METHOD(thread_x_1_fu_246_p2);
    sensitive << ( x_phi_fu_211_p4 );

    SC_METHOD(thread_x_phi_fu_211_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( exitcond_flatten_reg_615 );
    sensitive << ( x_reg_207 );
    sensitive << ( tmp_mid2_v_reg_630 );

    SC_METHOD(thread_y_1_fu_316_p2);
    sensitive << ( y_mid2_reg_624 );

    SC_METHOD(thread_y_mid2_fu_257_p3);
    sensitive << ( y_phi_fu_222_p4 );
    sensitive << ( exitcond_fu_252_p2 );

    SC_METHOD(thread_y_phi_fu_222_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( exitcond_flatten_reg_615 );
    sensitive << ( y_reg_218 );
    sensitive << ( y_1_fu_316_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_width_empty_n );
    sensitive << ( in_height_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_fu_235_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_flag00011011 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "yuv2rgb_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_channels_ch1_dout, "(port)in_channels_ch1_dout");
    sc_trace(mVcdFile, in_channels_ch1_empty_n, "(port)in_channels_ch1_empty_n");
    sc_trace(mVcdFile, in_channels_ch1_read, "(port)in_channels_ch1_read");
    sc_trace(mVcdFile, in_channels_ch2_dout, "(port)in_channels_ch2_dout");
    sc_trace(mVcdFile, in_channels_ch2_empty_n, "(port)in_channels_ch2_empty_n");
    sc_trace(mVcdFile, in_channels_ch2_read, "(port)in_channels_ch2_read");
    sc_trace(mVcdFile, in_channels_ch3_dout, "(port)in_channels_ch3_dout");
    sc_trace(mVcdFile, in_channels_ch3_empty_n, "(port)in_channels_ch3_empty_n");
    sc_trace(mVcdFile, in_channels_ch3_read, "(port)in_channels_ch3_read");
    sc_trace(mVcdFile, in_width_dout, "(port)in_width_dout");
    sc_trace(mVcdFile, in_width_empty_n, "(port)in_width_empty_n");
    sc_trace(mVcdFile, in_width_read, "(port)in_width_read");
    sc_trace(mVcdFile, in_height_dout, "(port)in_height_dout");
    sc_trace(mVcdFile, in_height_empty_n, "(port)in_height_empty_n");
    sc_trace(mVcdFile, in_height_read, "(port)in_height_read");
    sc_trace(mVcdFile, out_channels_ch1_address0, "(port)out_channels_ch1_address0");
    sc_trace(mVcdFile, out_channels_ch1_ce0, "(port)out_channels_ch1_ce0");
    sc_trace(mVcdFile, out_channels_ch1_we0, "(port)out_channels_ch1_we0");
    sc_trace(mVcdFile, out_channels_ch1_d0, "(port)out_channels_ch1_d0");
    sc_trace(mVcdFile, out_channels_ch2_address0, "(port)out_channels_ch2_address0");
    sc_trace(mVcdFile, out_channels_ch2_ce0, "(port)out_channels_ch2_ce0");
    sc_trace(mVcdFile, out_channels_ch2_we0, "(port)out_channels_ch2_we0");
    sc_trace(mVcdFile, out_channels_ch2_d0, "(port)out_channels_ch2_d0");
    sc_trace(mVcdFile, out_channels_ch3_address0, "(port)out_channels_ch3_address0");
    sc_trace(mVcdFile, out_channels_ch3_ce0, "(port)out_channels_ch3_ce0");
    sc_trace(mVcdFile, out_channels_ch3_we0, "(port)out_channels_ch3_we0");
    sc_trace(mVcdFile, out_channels_ch3_d0, "(port)out_channels_ch3_d0");
    sc_trace(mVcdFile, out_width, "(port)out_width");
    sc_trace(mVcdFile, out_width_ap_vld, "(port)out_width_ap_vld");
    sc_trace(mVcdFile, out_height, "(port)out_height");
    sc_trace(mVcdFile, out_height_ap_vld, "(port)out_height_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, in_channels_ch1_blk_n, "in_channels_ch1_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00000000, "ap_block_pp0_stage0_flag00000000");
    sc_trace(mVcdFile, exitcond_flatten_reg_615, "exitcond_flatten_reg_615");
    sc_trace(mVcdFile, in_channels_ch2_blk_n, "in_channels_ch2_blk_n");
    sc_trace(mVcdFile, in_channels_ch3_blk_n, "in_channels_ch3_blk_n");
    sc_trace(mVcdFile, in_width_blk_n, "in_width_blk_n");
    sc_trace(mVcdFile, in_height_blk_n, "in_height_blk_n");
    sc_trace(mVcdFile, indvar_flatten_reg_196, "indvar_flatten_reg_196");
    sc_trace(mVcdFile, x_reg_207, "x_reg_207");
    sc_trace(mVcdFile, y_reg_218, "y_reg_218");
    sc_trace(mVcdFile, width_reg_597, "width_reg_597");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, height_reg_603, "height_reg_603");
    sc_trace(mVcdFile, bound_fu_566_p2, "bound_fu_566_p2");
    sc_trace(mVcdFile, bound_reg_610, "bound_reg_610");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, exitcond_flatten_fu_235_p2, "exitcond_flatten_fu_235_p2");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter2, "ap_block_state5_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter3, "ap_block_state6_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter4, "ap_block_state7_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter5, "ap_block_state8_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter6, "ap_block_state9_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011001, "ap_block_pp0_stage0_flag00011001");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond_flatten_reg_615, "ap_reg_pp0_iter1_exitcond_flatten_reg_615");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_exitcond_flatten_reg_615, "ap_reg_pp0_iter2_exitcond_flatten_reg_615");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_exitcond_flatten_reg_615, "ap_reg_pp0_iter3_exitcond_flatten_reg_615");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_exitcond_flatten_reg_615, "ap_reg_pp0_iter4_exitcond_flatten_reg_615");
    sc_trace(mVcdFile, indvar_flatten_next_fu_240_p2, "indvar_flatten_next_fu_240_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, y_mid2_fu_257_p3, "y_mid2_fu_257_p3");
    sc_trace(mVcdFile, y_mid2_reg_624, "y_mid2_reg_624");
    sc_trace(mVcdFile, tmp_mid2_v_fu_265_p3, "tmp_mid2_v_fu_265_p3");
    sc_trace(mVcdFile, tmp_mid2_v_reg_630, "tmp_mid2_v_reg_630");
    sc_trace(mVcdFile, tmp_fu_273_p1, "tmp_fu_273_p1");
    sc_trace(mVcdFile, tmp_reg_635, "tmp_reg_635");
    sc_trace(mVcdFile, tmp_1_fu_277_p1, "tmp_1_fu_277_p1");
    sc_trace(mVcdFile, tmp_1_reg_640, "tmp_1_reg_640");
    sc_trace(mVcdFile, tmp_s_fu_304_p2, "tmp_s_fu_304_p2");
    sc_trace(mVcdFile, tmp_s_reg_645, "tmp_s_reg_645");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_tmp_s_reg_645, "ap_reg_pp0_iter2_tmp_s_reg_645");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_tmp_s_reg_645, "ap_reg_pp0_iter3_tmp_s_reg_645");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_tmp_s_reg_645, "ap_reg_pp0_iter4_tmp_s_reg_645");
    sc_trace(mVcdFile, Y_reg_650, "Y_reg_650");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_Y_reg_650, "ap_reg_pp0_iter2_Y_reg_650");
    sc_trace(mVcdFile, U_reg_655, "U_reg_655");
    sc_trace(mVcdFile, E_fu_310_p2, "E_fu_310_p2");
    sc_trace(mVcdFile, E_reg_660, "E_reg_660");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_E_reg_660, "ap_reg_pp0_iter2_E_reg_660");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_E_reg_660, "ap_reg_pp0_iter3_E_reg_660");
    sc_trace(mVcdFile, y_1_fu_316_p2, "y_1_fu_316_p2");
    sc_trace(mVcdFile, D_fu_321_p2, "D_fu_321_p2");
    sc_trace(mVcdFile, D_reg_671, "D_reg_671");
    sc_trace(mVcdFile, tmp_11_fu_329_p2, "tmp_11_fu_329_p2");
    sc_trace(mVcdFile, tmp_11_reg_678, "tmp_11_reg_678");
    sc_trace(mVcdFile, grp_fu_572_p4, "grp_fu_572_p4");
    sc_trace(mVcdFile, tmp_5_reg_683, "tmp_5_reg_683");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, grp_fu_582_p3, "grp_fu_582_p3");
    sc_trace(mVcdFile, tmp1_reg_691, "tmp1_reg_691");
    sc_trace(mVcdFile, tmp_16_fu_363_p2, "tmp_16_fu_363_p2");
    sc_trace(mVcdFile, tmp_16_reg_696, "tmp_16_reg_696");
    sc_trace(mVcdFile, grp_fu_589_p3, "grp_fu_589_p3");
    sc_trace(mVcdFile, tmp_6_reg_702, "tmp_6_reg_702");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, icmp_fu_384_p2, "icmp_fu_384_p2");
    sc_trace(mVcdFile, icmp_reg_708, "icmp_reg_708");
    sc_trace(mVcdFile, G_fu_446_p3, "G_fu_446_p3");
    sc_trace(mVcdFile, G_reg_714, "G_reg_714");
    sc_trace(mVcdFile, B_fu_515_p3, "B_fu_515_p3");
    sc_trace(mVcdFile, B_reg_719, "B_reg_719");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011011, "ap_block_pp0_stage0_flag00011011");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, x_phi_fu_211_p4, "x_phi_fu_211_p4");
    sc_trace(mVcdFile, y_phi_fu_222_p4, "y_phi_fu_222_p4");
    sc_trace(mVcdFile, tmp_15_cast_fu_523_p1, "tmp_15_cast_fu_523_p1");
    sc_trace(mVcdFile, exitcond_fu_252_p2, "exitcond_fu_252_p2");
    sc_trace(mVcdFile, x_1_fu_246_p2, "x_1_fu_246_p2");
    sc_trace(mVcdFile, p_shl3_cast_fu_288_p3, "p_shl3_cast_fu_288_p3");
    sc_trace(mVcdFile, p_shl2_cast_fu_281_p3, "p_shl2_cast_fu_281_p3");
    sc_trace(mVcdFile, tmp_7_fu_295_p2, "tmp_7_fu_295_p2");
    sc_trace(mVcdFile, tmp_cast_fu_301_p1, "tmp_cast_fu_301_p1");
    sc_trace(mVcdFile, tmp_11_fu_329_p1, "tmp_11_fu_329_p1");
    sc_trace(mVcdFile, p_shl_fu_341_p3, "p_shl_fu_341_p3");
    sc_trace(mVcdFile, p_shl1_fu_352_p3, "p_shl1_fu_352_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_348_p1, "p_shl_cast_fu_348_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_359_p1, "p_shl1_cast_fu_359_p1");
    sc_trace(mVcdFile, tmp_2_fu_375_p4, "tmp_2_fu_375_p4");
    sc_trace(mVcdFile, tmp1_cast_fu_390_p1, "tmp1_cast_fu_390_p1");
    sc_trace(mVcdFile, tmp_12_fu_393_p2, "tmp_12_fu_393_p2");
    sc_trace(mVcdFile, tmp_13_fu_398_p4, "tmp_13_fu_398_p4");
    sc_trace(mVcdFile, icmp1_fu_408_p2, "icmp1_fu_408_p2");
    sc_trace(mVcdFile, tmp_14_fu_414_p3, "tmp_14_fu_414_p3");
    sc_trace(mVcdFile, tmp_15_fu_440_p2, "tmp_15_fu_440_p2");
    sc_trace(mVcdFile, p_phitmp2_fu_432_p3, "p_phitmp2_fu_432_p3");
    sc_trace(mVcdFile, phitmp2_fu_422_p4, "phitmp2_fu_422_p4");
    sc_trace(mVcdFile, tmp_20_cast_fu_372_p1, "tmp_20_cast_fu_372_p1");
    sc_trace(mVcdFile, tmp_35_cast_fu_454_p1, "tmp_35_cast_fu_454_p1");
    sc_trace(mVcdFile, tmp_18_fu_461_p2, "tmp_18_fu_461_p2");
    sc_trace(mVcdFile, tmp_19_fu_467_p4, "tmp_19_fu_467_p4");
    sc_trace(mVcdFile, tmp_17_fu_457_p2, "tmp_17_fu_457_p2");
    sc_trace(mVcdFile, icmp2_fu_477_p2, "icmp2_fu_477_p2");
    sc_trace(mVcdFile, tmp_20_fu_483_p3, "tmp_20_fu_483_p3");
    sc_trace(mVcdFile, tmp_21_fu_509_p2, "tmp_21_fu_509_p2");
    sc_trace(mVcdFile, p_phitmp3_fu_501_p3, "p_phitmp3_fu_501_p3");
    sc_trace(mVcdFile, phitmp3_fu_491_p4, "phitmp3_fu_491_p4");
    sc_trace(mVcdFile, tmp_8_fu_529_p3, "tmp_8_fu_529_p3");
    sc_trace(mVcdFile, tmp_9_fu_552_p2, "tmp_9_fu_552_p2");
    sc_trace(mVcdFile, p_phitmp_fu_545_p3, "p_phitmp_fu_545_p3");
    sc_trace(mVcdFile, phitmp_fu_536_p4, "phitmp_fu_536_p4");
    sc_trace(mVcdFile, bound_fu_566_p0, "bound_fu_566_p0");
    sc_trace(mVcdFile, bound_fu_566_p1, "bound_fu_566_p1");
    sc_trace(mVcdFile, grp_fu_572_p0, "grp_fu_572_p0");
    sc_trace(mVcdFile, grp_fu_572_p1, "grp_fu_572_p1");
    sc_trace(mVcdFile, grp_fu_572_p2, "grp_fu_572_p2");
    sc_trace(mVcdFile, grp_fu_572_p3, "grp_fu_572_p3");
    sc_trace(mVcdFile, grp_fu_582_p0, "grp_fu_582_p0");
    sc_trace(mVcdFile, grp_fu_589_p0, "grp_fu_589_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, bound_fu_566_p00, "bound_fu_566_p00");
    sc_trace(mVcdFile, bound_fu_566_p10, "bound_fu_566_p10");
    sc_trace(mVcdFile, grp_fu_572_p10, "grp_fu_572_p10");
#endif

    }
}

yuv2rgb::~yuv2rgb() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete yuv_filter_mul_mubkb_x_U36;
    delete yuv_filter_ama_adg8j_U37;
    delete yuv_filter_mac_muhbi_U38;
    delete yuv_filter_mac_muibs_U39;
}

void yuv2rgb::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            ap_enable_reg_pp0_iter6 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_235_p2.read()))) {
        indvar_flatten_reg_196 = indvar_flatten_next_fu_240_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        indvar_flatten_reg_196 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_615.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        x_reg_207 = tmp_mid2_v_reg_630.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        x_reg_207 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_615.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        y_reg_218 = y_1_fu_316_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        y_reg_218 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_615.read()))) {
        B_reg_719 = B_fu_515_p3.read();
        G_reg_714 = G_fu_446_p3.read();
        icmp_reg_708 = icmp_fu_384_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_615.read()))) {
        D_reg_671 = D_fu_321_p2.read();
        tmp_11_reg_678 = tmp_11_fu_329_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_615.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        E_reg_660 = E_fu_310_p2.read();
        U_reg_655 = in_channels_ch2_dout.read();
        Y_reg_650 = in_channels_ch1_dout.read();
        tmp_s_reg_645 = tmp_s_fu_304_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond_flatten_reg_615 = exitcond_flatten_reg_615.read();
        exitcond_flatten_reg_615 = exitcond_flatten_fu_235_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) {
        ap_reg_pp0_iter2_E_reg_660 = E_reg_660.read();
        ap_reg_pp0_iter2_Y_reg_650 = Y_reg_650.read();
        ap_reg_pp0_iter2_exitcond_flatten_reg_615 = ap_reg_pp0_iter1_exitcond_flatten_reg_615.read();
        ap_reg_pp0_iter2_tmp_s_reg_645 = tmp_s_reg_645.read();
        ap_reg_pp0_iter3_E_reg_660 = ap_reg_pp0_iter2_E_reg_660.read();
        ap_reg_pp0_iter3_exitcond_flatten_reg_615 = ap_reg_pp0_iter2_exitcond_flatten_reg_615.read();
        ap_reg_pp0_iter3_tmp_s_reg_645 = ap_reg_pp0_iter2_tmp_s_reg_645.read();
        ap_reg_pp0_iter4_exitcond_flatten_reg_615 = ap_reg_pp0_iter3_exitcond_flatten_reg_615.read();
        ap_reg_pp0_iter4_tmp_s_reg_645 = ap_reg_pp0_iter3_tmp_s_reg_645.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        bound_reg_610 = bound_fu_566_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_width_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_height_empty_n.read())))) {
        height_reg_603 = in_height_dout.read();
        width_reg_597 = in_width_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter2_exitcond_flatten_reg_615.read()))) {
        tmp1_reg_691 = grp_fu_582_p3.read();
        tmp_5_reg_683 = grp_fu_572_p4.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter2_exitcond_flatten_reg_615.read()))) {
        tmp_16_reg_696 = tmp_16_fu_363_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_235_p2.read()))) {
        tmp_1_reg_640 = tmp_1_fu_277_p1.read();
        tmp_reg_635 = tmp_fu_273_p1.read();
        y_mid2_reg_624 = y_mid2_fu_257_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_615.read()))) {
        tmp_6_reg_702 = grp_fu_589_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_235_p2.read()))) {
        tmp_mid2_v_reg_630 = tmp_mid2_v_fu_265_p3.read();
    }
}

void yuv2rgb::thread_B_fu_515_p3() {
    B_fu_515_p3 = (!tmp_21_fu_509_p2.read()[0].is_01())? sc_lv<8>(): ((tmp_21_fu_509_p2.read()[0].to_bool())? p_phitmp3_fu_501_p3.read(): phitmp3_fu_491_p4.read());
}

void yuv2rgb::thread_D_fu_321_p2() {
    D_fu_321_p2 = (U_reg_655.read() ^ ap_const_lv8_80);
}

void yuv2rgb::thread_E_fu_310_p2() {
    E_fu_310_p2 = (in_channels_ch3_dout.read() ^ ap_const_lv8_80);
}

void yuv2rgb::thread_G_fu_446_p3() {
    G_fu_446_p3 = (!tmp_15_fu_440_p2.read()[0].is_01())? sc_lv<8>(): ((tmp_15_fu_440_p2.read()[0].to_bool())? p_phitmp2_fu_432_p3.read(): phitmp2_fu_422_p4.read());
}

void yuv2rgb::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void yuv2rgb::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void yuv2rgb::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[3];
}

void yuv2rgb::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void yuv2rgb::thread_ap_block_pp0_stage0_flag00000000() {
    ap_block_pp0_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv2rgb::thread_ap_block_pp0_stage0_flag00011001() {
    ap_block_pp0_stage0_flag00011001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(exitcond_flatten_reg_615.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, in_channels_ch1_empty_n.read())) || 
  (esl_seteq<1,1,1>(exitcond_flatten_reg_615.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, in_channels_ch2_empty_n.read())) || 
  (esl_seteq<1,1,1>(exitcond_flatten_reg_615.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, in_channels_ch3_empty_n.read()))));
}

void yuv2rgb::thread_ap_block_pp0_stage0_flag00011011() {
    ap_block_pp0_stage0_flag00011011 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(exitcond_flatten_reg_615.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, in_channels_ch1_empty_n.read())) || 
  (esl_seteq<1,1,1>(exitcond_flatten_reg_615.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, in_channels_ch2_empty_n.read())) || 
  (esl_seteq<1,1,1>(exitcond_flatten_reg_615.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, in_channels_ch3_empty_n.read()))));
}

void yuv2rgb::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_width_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_height_empty_n.read()));
}

void yuv2rgb::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv2rgb::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(exitcond_flatten_reg_615.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_channels_ch1_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_flatten_reg_615.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_channels_ch2_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_flatten_reg_615.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_channels_ch3_empty_n.read())));
}

void yuv2rgb::thread_ap_block_state5_pp0_stage0_iter2() {
    ap_block_state5_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv2rgb::thread_ap_block_state6_pp0_stage0_iter3() {
    ap_block_state6_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv2rgb::thread_ap_block_state7_pp0_stage0_iter4() {
    ap_block_state7_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv2rgb::thread_ap_block_state8_pp0_stage0_iter5() {
    ap_block_state8_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv2rgb::thread_ap_block_state9_pp0_stage0_iter6() {
    ap_block_state9_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv2rgb::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_235_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void yuv2rgb::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void yuv2rgb::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void yuv2rgb::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void yuv2rgb::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void yuv2rgb::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void yuv2rgb::thread_bound_fu_566_p0() {
    bound_fu_566_p0 =  (sc_lv<16>) (bound_fu_566_p00.read());
}

void yuv2rgb::thread_bound_fu_566_p00() {
    bound_fu_566_p00 = esl_zext<32,16>(height_reg_603.read());
}

void yuv2rgb::thread_bound_fu_566_p1() {
    bound_fu_566_p1 =  (sc_lv<16>) (bound_fu_566_p10.read());
}

void yuv2rgb::thread_bound_fu_566_p10() {
    bound_fu_566_p10 = esl_zext<32,16>(width_reg_597.read());
}

void yuv2rgb::thread_exitcond_flatten_fu_235_p2() {
    exitcond_flatten_fu_235_p2 = (!indvar_flatten_reg_196.read().is_01() || !bound_reg_610.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_196.read() == bound_reg_610.read());
}

void yuv2rgb::thread_exitcond_fu_252_p2() {
    exitcond_fu_252_p2 = (!y_phi_fu_222_p4.read().is_01() || !height_reg_603.read().is_01())? sc_lv<1>(): sc_lv<1>(y_phi_fu_222_p4.read() == height_reg_603.read());
}

void yuv2rgb::thread_grp_fu_572_p0() {
    grp_fu_572_p0 =  (sc_lv<5>) (ap_const_lv9_1F0);
}

void yuv2rgb::thread_grp_fu_572_p1() {
    grp_fu_572_p1 =  (sc_lv<8>) (grp_fu_572_p10.read());
}

void yuv2rgb::thread_grp_fu_572_p10() {
    grp_fu_572_p10 = esl_zext<9,8>(ap_reg_pp0_iter2_Y_reg_650.read());
}

void yuv2rgb::thread_grp_fu_572_p2() {
    grp_fu_572_p2 =  (sc_lv<10>) (ap_const_lv18_12A);
}

void yuv2rgb::thread_grp_fu_572_p3() {
    grp_fu_572_p3 =  (sc_lv<9>) (ap_const_lv18_80);
}

void yuv2rgb::thread_grp_fu_582_p0() {
    grp_fu_582_p0 =  (sc_lv<8>) (ap_const_lv16_FF9C);
}

void yuv2rgb::thread_grp_fu_589_p0() {
    grp_fu_589_p0 =  (sc_lv<10>) (ap_const_lv18_199);
}

void yuv2rgb::thread_icmp1_fu_408_p2() {
    icmp1_fu_408_p2 = (!tmp_13_fu_398_p4.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(tmp_13_fu_398_p4.read() == ap_const_lv2_1);
}

void yuv2rgb::thread_icmp2_fu_477_p2() {
    icmp2_fu_477_p2 = (!tmp_19_fu_467_p4.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): (sc_bigint<3>(tmp_19_fu_467_p4.read()) > sc_bigint<3>(ap_const_lv3_0));
}

void yuv2rgb::thread_icmp_fu_384_p2() {
    icmp_fu_384_p2 = (!tmp_2_fu_375_p4.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(tmp_2_fu_375_p4.read() == ap_const_lv2_1);
}

void yuv2rgb::thread_in_channels_ch1_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_615.read(), ap_const_lv1_0))) {
        in_channels_ch1_blk_n = in_channels_ch1_empty_n.read();
    } else {
        in_channels_ch1_blk_n = ap_const_logic_1;
    }
}

void yuv2rgb::thread_in_channels_ch1_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_615.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        in_channels_ch1_read = ap_const_logic_1;
    } else {
        in_channels_ch1_read = ap_const_logic_0;
    }
}

void yuv2rgb::thread_in_channels_ch2_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_615.read(), ap_const_lv1_0))) {
        in_channels_ch2_blk_n = in_channels_ch2_empty_n.read();
    } else {
        in_channels_ch2_blk_n = ap_const_logic_1;
    }
}

void yuv2rgb::thread_in_channels_ch2_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_615.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        in_channels_ch2_read = ap_const_logic_1;
    } else {
        in_channels_ch2_read = ap_const_logic_0;
    }
}

void yuv2rgb::thread_in_channels_ch3_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_615.read(), ap_const_lv1_0))) {
        in_channels_ch3_blk_n = in_channels_ch3_empty_n.read();
    } else {
        in_channels_ch3_blk_n = ap_const_logic_1;
    }
}

void yuv2rgb::thread_in_channels_ch3_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_615.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        in_channels_ch3_read = ap_const_logic_1;
    } else {
        in_channels_ch3_read = ap_const_logic_0;
    }
}

void yuv2rgb::thread_in_height_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        in_height_blk_n = in_height_empty_n.read();
    } else {
        in_height_blk_n = ap_const_logic_1;
    }
}

void yuv2rgb::thread_in_height_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_width_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_height_empty_n.read())))) {
        in_height_read = ap_const_logic_1;
    } else {
        in_height_read = ap_const_logic_0;
    }
}

void yuv2rgb::thread_in_width_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        in_width_blk_n = in_width_empty_n.read();
    } else {
        in_width_blk_n = ap_const_logic_1;
    }
}

void yuv2rgb::thread_in_width_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_width_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_height_empty_n.read())))) {
        in_width_read = ap_const_logic_1;
    } else {
        in_width_read = ap_const_logic_0;
    }
}

void yuv2rgb::thread_indvar_flatten_next_fu_240_p2() {
    indvar_flatten_next_fu_240_p2 = (!indvar_flatten_reg_196.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(indvar_flatten_reg_196.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void yuv2rgb::thread_out_channels_ch1_address0() {
    out_channels_ch1_address0 =  (sc_lv<22>) (tmp_15_cast_fu_523_p1.read());
}

void yuv2rgb::thread_out_channels_ch1_ce0() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read())))) {
        out_channels_ch1_ce0 = ap_const_logic_1;
    } else {
        out_channels_ch1_ce0 = ap_const_logic_0;
    }
}

void yuv2rgb::thread_out_channels_ch1_d0() {
    out_channels_ch1_d0 = (!tmp_9_fu_552_p2.read()[0].is_01())? sc_lv<8>(): ((tmp_9_fu_552_p2.read()[0].to_bool())? p_phitmp_fu_545_p3.read(): phitmp_fu_536_p4.read());
}

void yuv2rgb::thread_out_channels_ch1_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter4_exitcond_flatten_reg_615.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()))) {
        out_channels_ch1_we0 = ap_const_logic_1;
    } else {
        out_channels_ch1_we0 = ap_const_logic_0;
    }
}

void yuv2rgb::thread_out_channels_ch2_address0() {
    out_channels_ch2_address0 =  (sc_lv<22>) (tmp_15_cast_fu_523_p1.read());
}

void yuv2rgb::thread_out_channels_ch2_ce0() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read())))) {
        out_channels_ch2_ce0 = ap_const_logic_1;
    } else {
        out_channels_ch2_ce0 = ap_const_logic_0;
    }
}

void yuv2rgb::thread_out_channels_ch2_d0() {
    out_channels_ch2_d0 = G_reg_714.read();
}

void yuv2rgb::thread_out_channels_ch2_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter4_exitcond_flatten_reg_615.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()))) {
        out_channels_ch2_we0 = ap_const_logic_1;
    } else {
        out_channels_ch2_we0 = ap_const_logic_0;
    }
}

void yuv2rgb::thread_out_channels_ch3_address0() {
    out_channels_ch3_address0 =  (sc_lv<22>) (tmp_15_cast_fu_523_p1.read());
}

void yuv2rgb::thread_out_channels_ch3_ce0() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read())))) {
        out_channels_ch3_ce0 = ap_const_logic_1;
    } else {
        out_channels_ch3_ce0 = ap_const_logic_0;
    }
}

void yuv2rgb::thread_out_channels_ch3_d0() {
    out_channels_ch3_d0 = B_reg_719.read();
}

void yuv2rgb::thread_out_channels_ch3_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter4_exitcond_flatten_reg_615.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()))) {
        out_channels_ch3_we0 = ap_const_logic_1;
    } else {
        out_channels_ch3_we0 = ap_const_logic_0;
    }
}

void yuv2rgb::thread_out_height() {
    out_height = height_reg_603.read();
}

void yuv2rgb::thread_out_height_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        out_height_ap_vld = ap_const_logic_1;
    } else {
        out_height_ap_vld = ap_const_logic_0;
    }
}

void yuv2rgb::thread_out_width() {
    out_width = width_reg_597.read();
}

void yuv2rgb::thread_out_width_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        out_width_ap_vld = ap_const_logic_1;
    } else {
        out_width_ap_vld = ap_const_logic_0;
    }
}

void yuv2rgb::thread_p_phitmp2_fu_432_p3() {
    p_phitmp2_fu_432_p3 = (!icmp1_fu_408_p2.read()[0].is_01())? sc_lv<8>(): ((icmp1_fu_408_p2.read()[0].to_bool())? ap_const_lv8_FF: ap_const_lv8_0);
}

void yuv2rgb::thread_p_phitmp3_fu_501_p3() {
    p_phitmp3_fu_501_p3 = (!icmp2_fu_477_p2.read()[0].is_01())? sc_lv<8>(): ((icmp2_fu_477_p2.read()[0].to_bool())? ap_const_lv8_FF: ap_const_lv8_0);
}

void yuv2rgb::thread_p_phitmp_fu_545_p3() {
    p_phitmp_fu_545_p3 = (!icmp_reg_708.read()[0].is_01())? sc_lv<8>(): ((icmp_reg_708.read()[0].to_bool())? ap_const_lv8_FF: ap_const_lv8_0);
}

void yuv2rgb::thread_p_shl1_cast_fu_359_p1() {
    p_shl1_cast_fu_359_p1 = esl_sext<18,10>(p_shl1_fu_352_p3.read());
}

void yuv2rgb::thread_p_shl1_fu_352_p3() {
    p_shl1_fu_352_p3 = esl_concat<8,2>(D_reg_671.read(), ap_const_lv2_0);
}

void yuv2rgb::thread_p_shl2_cast_fu_281_p3() {
    p_shl2_cast_fu_281_p3 = esl_concat<13,10>(tmp_reg_635.read(), ap_const_lv10_0);
}

void yuv2rgb::thread_p_shl3_cast_fu_288_p3() {
    p_shl3_cast_fu_288_p3 = esl_concat<15,8>(tmp_1_reg_640.read(), ap_const_lv8_0);
}

void yuv2rgb::thread_p_shl_cast_fu_348_p1() {
    p_shl_cast_fu_348_p1 = esl_sext<18,17>(p_shl_fu_341_p3.read());
}

void yuv2rgb::thread_p_shl_fu_341_p3() {
    p_shl_fu_341_p3 = esl_concat<8,9>(D_reg_671.read(), ap_const_lv9_0);
}

void yuv2rgb::thread_phitmp2_fu_422_p4() {
    phitmp2_fu_422_p4 = tmp_12_fu_393_p2.read().range(15, 8);
}

void yuv2rgb::thread_phitmp3_fu_491_p4() {
    phitmp3_fu_491_p4 = tmp_17_fu_457_p2.read().range(15, 8);
}

void yuv2rgb::thread_phitmp_fu_536_p4() {
    phitmp_fu_536_p4 = tmp_6_reg_702.read().range(15, 8);
}

void yuv2rgb::thread_tmp1_cast_fu_390_p1() {
    tmp1_cast_fu_390_p1 = esl_sext<18,17>(tmp1_reg_691.read());
}

void yuv2rgb::thread_tmp_11_fu_329_p1() {
    tmp_11_fu_329_p1 = E_reg_660.read();
}

void yuv2rgb::thread_tmp_11_fu_329_p2() {
    tmp_11_fu_329_p2 = (!ap_const_lv17_1FF30.is_01() || !tmp_11_fu_329_p1.read().is_01())? sc_lv<17>(): sc_bigint<17>(ap_const_lv17_1FF30) * sc_bigint<8>(tmp_11_fu_329_p1.read());
}

void yuv2rgb::thread_tmp_12_fu_393_p2() {
    tmp_12_fu_393_p2 = (!tmp1_cast_fu_390_p1.read().is_01() || !tmp_5_reg_683.read().is_01())? sc_lv<18>(): (sc_bigint<18>(tmp1_cast_fu_390_p1.read()) + sc_bigint<18>(tmp_5_reg_683.read()));
}

void yuv2rgb::thread_tmp_13_fu_398_p4() {
    tmp_13_fu_398_p4 = tmp_12_fu_393_p2.read().range(17, 16);
}

void yuv2rgb::thread_tmp_14_fu_414_p3() {
    tmp_14_fu_414_p3 = tmp_12_fu_393_p2.read().range(17, 17);
}

void yuv2rgb::thread_tmp_15_cast_fu_523_p1() {
    tmp_15_cast_fu_523_p1 = esl_zext<32,23>(ap_reg_pp0_iter4_tmp_s_reg_645.read());
}

void yuv2rgb::thread_tmp_15_fu_440_p2() {
    tmp_15_fu_440_p2 = (icmp1_fu_408_p2.read() | tmp_14_fu_414_p3.read());
}

void yuv2rgb::thread_tmp_16_fu_363_p2() {
    tmp_16_fu_363_p2 = (!p_shl_cast_fu_348_p1.read().is_01() || !p_shl1_cast_fu_359_p1.read().is_01())? sc_lv<18>(): (sc_bigint<18>(p_shl_cast_fu_348_p1.read()) + sc_bigint<18>(p_shl1_cast_fu_359_p1.read()));
}

void yuv2rgb::thread_tmp_17_fu_457_p2() {
    tmp_17_fu_457_p2 = (!tmp_16_reg_696.read().is_01() || !tmp_5_reg_683.read().is_01())? sc_lv<18>(): (sc_biguint<18>(tmp_16_reg_696.read()) + sc_bigint<18>(tmp_5_reg_683.read()));
}

void yuv2rgb::thread_tmp_18_fu_461_p2() {
    tmp_18_fu_461_p2 = (!tmp_20_cast_fu_372_p1.read().is_01() || !tmp_35_cast_fu_454_p1.read().is_01())? sc_lv<19>(): (sc_bigint<19>(tmp_20_cast_fu_372_p1.read()) + sc_bigint<19>(tmp_35_cast_fu_454_p1.read()));
}

void yuv2rgb::thread_tmp_19_fu_467_p4() {
    tmp_19_fu_467_p4 = tmp_18_fu_461_p2.read().range(18, 16);
}

void yuv2rgb::thread_tmp_1_fu_277_p1() {
    tmp_1_fu_277_p1 = tmp_mid2_v_fu_265_p3.read().range(15-1, 0);
}

void yuv2rgb::thread_tmp_20_cast_fu_372_p1() {
    tmp_20_cast_fu_372_p1 = esl_sext<19,18>(tmp_5_reg_683.read());
}

void yuv2rgb::thread_tmp_20_fu_483_p3() {
    tmp_20_fu_483_p3 = tmp_18_fu_461_p2.read().range(18, 18);
}

void yuv2rgb::thread_tmp_21_fu_509_p2() {
    tmp_21_fu_509_p2 = (icmp2_fu_477_p2.read() | tmp_20_fu_483_p3.read());
}

void yuv2rgb::thread_tmp_2_fu_375_p4() {
    tmp_2_fu_375_p4 = grp_fu_589_p3.read().range(17, 16);
}

void yuv2rgb::thread_tmp_35_cast_fu_454_p1() {
    tmp_35_cast_fu_454_p1 = esl_sext<19,18>(tmp_16_reg_696.read());
}

void yuv2rgb::thread_tmp_7_fu_295_p2() {
    tmp_7_fu_295_p2 = (!p_shl3_cast_fu_288_p3.read().is_01() || !p_shl2_cast_fu_281_p3.read().is_01())? sc_lv<23>(): (sc_biguint<23>(p_shl3_cast_fu_288_p3.read()) + sc_biguint<23>(p_shl2_cast_fu_281_p3.read()));
}

void yuv2rgb::thread_tmp_8_fu_529_p3() {
    tmp_8_fu_529_p3 = tmp_6_reg_702.read().range(17, 17);
}

void yuv2rgb::thread_tmp_9_fu_552_p2() {
    tmp_9_fu_552_p2 = (icmp_reg_708.read() | tmp_8_fu_529_p3.read());
}

void yuv2rgb::thread_tmp_cast_fu_301_p1() {
    tmp_cast_fu_301_p1 = esl_zext<23,16>(y_mid2_reg_624.read());
}

void yuv2rgb::thread_tmp_fu_273_p1() {
    tmp_fu_273_p1 = tmp_mid2_v_fu_265_p3.read().range(13-1, 0);
}

void yuv2rgb::thread_tmp_mid2_v_fu_265_p3() {
    tmp_mid2_v_fu_265_p3 = (!exitcond_fu_252_p2.read()[0].is_01())? sc_lv<16>(): ((exitcond_fu_252_p2.read()[0].to_bool())? x_1_fu_246_p2.read(): x_phi_fu_211_p4.read());
}

void yuv2rgb::thread_tmp_s_fu_304_p2() {
    tmp_s_fu_304_p2 = (!tmp_7_fu_295_p2.read().is_01() || !tmp_cast_fu_301_p1.read().is_01())? sc_lv<23>(): (sc_biguint<23>(tmp_7_fu_295_p2.read()) + sc_biguint<23>(tmp_cast_fu_301_p1.read()));
}

void yuv2rgb::thread_x_1_fu_246_p2() {
    x_1_fu_246_p2 = (!ap_const_lv16_1.is_01() || !x_phi_fu_211_p4.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_1) + sc_biguint<16>(x_phi_fu_211_p4.read()));
}

void yuv2rgb::thread_x_phi_fu_211_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_615.read(), ap_const_lv1_0))) {
        x_phi_fu_211_p4 = tmp_mid2_v_reg_630.read();
    } else {
        x_phi_fu_211_p4 = x_reg_207.read();
    }
}

void yuv2rgb::thread_y_1_fu_316_p2() {
    y_1_fu_316_p2 = (!ap_const_lv16_1.is_01() || !y_mid2_reg_624.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_1) + sc_biguint<16>(y_mid2_reg_624.read()));
}

void yuv2rgb::thread_y_mid2_fu_257_p3() {
    y_mid2_fu_257_p3 = (!exitcond_fu_252_p2.read()[0].is_01())? sc_lv<16>(): ((exitcond_fu_252_p2.read()[0].to_bool())? ap_const_lv16_0: y_phi_fu_222_p4.read());
}

void yuv2rgb::thread_y_phi_fu_222_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_615.read(), ap_const_lv1_0))) {
        y_phi_fu_222_p4 = y_1_fu_316_p2.read();
    } else {
        y_phi_fu_222_p4 = y_reg_218.read();
    }
}

void yuv2rgb::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_width_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_height_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter5.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_235_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter5.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond_flatten_fu_235_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

