

================================================================
== Vivado HLS Report for 'yuv2rgb'
================================================================
* Date:           Sun Oct  9 14:41:11 2022

* Version:        2017.2 (Build 1909853 on Thu Jun 15 18:55:24 MDT 2017)
* Project:        yuv_filter.prj
* Solution:       solution3
* Product family: zynq
* Target device:  xc7z010clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   8.00|      8.45|        1.00|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+---------+-------+---------+---------+
    |     Latency     |     Interval    | Pipeline|
    |  min  |   max   |  min  |   max   |   Type  |
    +-------+---------+-------+---------+---------+
    |  40008|  2457608|  40008|  2457608|   none  |
    +-------+---------+-------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------+-------+---------+----------+-----------+-----------+-----------------+----------+
        |                                 |     Latency     | Iteration|  Initiation Interval  |       Trip      |          |
        |            Loop Name            |  min  |   max   |  Latency |  achieved |   target  |      Count      | Pipelined|
        +---------------------------------+-------+---------+----------+-----------+-----------+-----------------+----------+
        |- YUV2RGB_LOOP_X_YUV2RGB_LOOP_Y  |  40005|  2457605|         7|          1|          1| 40000 ~ 2457600 |    yes   |
        +---------------------------------+-------+---------+----------+-----------+-----------+-----------------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 7


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 10
* Pipeline: 1
  Pipeline-0: II = 1, D = 7, States = { 3 4 5 6 7 8 9 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	10  / (exitcond_flatten)
	4  / (!exitcond_flatten)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	3  / true
10 --> 
* FSM state operations: 

 <State 1>: 2.32ns
ST_1: width (16)  [1/1] 2.32ns  loc: yuv_filter.c:83
:5  %width = call i16 @_ssdm_op_Read.ap_fifo.i16P(i16* %in_width)

ST_1: height (17)  [1/1] 2.32ns  loc: yuv_filter.c:84
:6  %height = call i16 @_ssdm_op_Read.ap_fifo.i16P(i16* %in_height)


 <State 2>: 6.38ns
ST_2: empty (11)  [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecInterface(i16* %in_height, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_2: empty_67 (12)  [1/1] 0.00ns
:1  %empty_67 = call i32 (...)* @_ssdm_op_SpecInterface(i16* %in_width, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_2: empty_68 (13)  [1/1] 0.00ns
:2  %empty_68 = call i32 (...)* @_ssdm_op_SpecInterface(i8* %in_channels_ch3, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_2: empty_69 (14)  [1/1] 0.00ns
:3  %empty_69 = call i32 (...)* @_ssdm_op_SpecInterface(i8* %in_channels_ch2, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_2: empty_70 (15)  [1/1] 0.00ns
:4  %empty_70 = call i32 (...)* @_ssdm_op_SpecInterface(i8* %in_channels_ch1, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_2: StgValue_18 (18)  [1/1] 0.00ns  loc: yuv_filter.c:85
:7  call void @_ssdm_op_Write.ap_auto.i16P(i16* %out_width, i16 %width)

ST_2: StgValue_19 (19)  [1/1] 0.00ns  loc: yuv_filter.c:86
:8  call void @_ssdm_op_Write.ap_auto.i16P(i16* %out_height, i16 %height)

ST_2: cast (20)  [1/1] 0.00ns  loc: yuv_filter.c:83
:9  %cast = zext i16 %width to i32

ST_2: cast1 (21)  [1/1] 0.00ns  loc: yuv_filter.c:84
:10  %cast1 = zext i16 %height to i32

ST_2: bound (22)  [1/1] 6.38ns  loc: yuv_filter.c:84
:11  %bound = mul i32 %cast1, %cast

ST_2: StgValue_23 (23)  [1/1] 1.59ns  loc: yuv_filter.c:89
:12  br label %1


 <State 3>: 5.33ns
ST_3: indvar_flatten (25)  [1/1] 0.00ns
:0  %indvar_flatten = phi i32 [ 0, %0 ], [ %indvar_flatten_next, %.reset ]

ST_3: x (26)  [1/1] 0.00ns  loc: yuv_filter.c:94
:1  %x = phi i16 [ 0, %0 ], [ %tmp_mid2_v, %.reset ]

ST_3: y (27)  [1/1] 0.00ns
:2  %y = phi i16 [ 0, %0 ], [ %y_1, %.reset ]

ST_3: StgValue_27 (28)  [1/1] 0.00ns  loc: yuv_filter.c:90
:3  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_3: exitcond_flatten (29)  [1/1] 3.26ns  loc: yuv_filter.c:84
:4  %exitcond_flatten = icmp eq i32 %indvar_flatten, %bound

ST_3: indvar_flatten_next (30)  [1/1] 2.90ns
:5  %indvar_flatten_next = add i32 %indvar_flatten, 1

ST_3: StgValue_30 (31)  [1/1] 0.00ns  loc: yuv_filter.c:84
:6  br i1 %exitcond_flatten, label %2, label %.reset

ST_3: x_1 (33)  [1/1] 2.39ns  loc: yuv_filter.c:89
.reset:0  %x_1 = add i16 1, %x

ST_3: exitcond (37)  [1/1] 3.03ns  loc: yuv_filter.c:92
.reset:4  %exitcond = icmp eq i16 %y, %height

ST_3: y_mid2 (38)  [1/1] 2.07ns  loc: yuv_filter.c:92
.reset:5  %y_mid2 = select i1 %exitcond, i16 0, i16 %y

ST_3: tmp_mid2_v (40)  [1/1] 2.07ns  loc: yuv_filter.c:94
.reset:7  %tmp_mid2_v = select i1 %exitcond, i16 %x_1, i16 %x

ST_3: tmp (41)  [1/1] 0.00ns  loc: yuv_filter.c:94
.reset:8  %tmp = trunc i16 %tmp_mid2_v to i13

ST_3: tmp_1 (43)  [1/1] 0.00ns  loc: yuv_filter.c:94
.reset:10  %tmp_1 = trunc i16 %tmp_mid2_v to i15


 <State 4>: 4.39ns
ST_4: p_shl2_cast (42)  [1/1] 0.00ns  loc: yuv_filter.c:94
.reset:9  %p_shl2_cast = call i23 @_ssdm_op_BitConcatenate.i23.i13.i10(i13 %tmp, i10 0)

ST_4: p_shl3_cast (44)  [1/1] 0.00ns  loc: yuv_filter.c:103
.reset:11  %p_shl3_cast = call i23 @_ssdm_op_BitConcatenate.i23.i15.i8(i15 %tmp_1, i8 0)

ST_4: tmp_7 (45)  [1/1] 2.05ns  loc: yuv_filter.c:103
.reset:12  %tmp_7 = add i23 %p_shl3_cast, %p_shl2_cast

ST_4: tmp_cast (47)  [1/1] 0.00ns  loc: yuv_filter.c:103
.reset:14  %tmp_cast = zext i16 %y_mid2 to i23

ST_4: tmp_s (48)  [1/1] 2.05ns  loc: yuv_filter.c:103
.reset:15  %tmp_s = add i23 %tmp_7, %tmp_cast

ST_4: Y (53)  [1/1] 2.32ns  loc: yuv_filter.c:94
.reset:20  %Y = call i8 @_ssdm_op_Read.ap_fifo.volatile.i8P(i8* %in_channels_ch1)

ST_4: U (54)  [1/1] 2.32ns  loc: yuv_filter.c:95
.reset:21  %U = call i8 @_ssdm_op_Read.ap_fifo.volatile.i8P(i8* %in_channels_ch2)

ST_4: V (55)  [1/1] 2.32ns  loc: yuv_filter.c:96
.reset:22  %V = call i8 @_ssdm_op_Read.ap_fifo.volatile.i8P(i8* %in_channels_ch3)

ST_4: E (59)  [1/1] 2.07ns  loc: yuv_filter.c:99
.reset:26  %E = xor i8 %V, -128

ST_4: y_1 (107)  [1/1] 2.39ns  loc: yuv_filter.c:92
.reset:74  %y_1 = add i16 1, %y_mid2


 <State 5>: 6.77ns
ST_5: D (58)  [1/1] 2.07ns  loc: yuv_filter.c:98
.reset:25  %D = xor i8 %U, -128

ST_5: tmp_18_cast4_cast (63)  [1/1] 0.00ns  loc: yuv_filter.c:100
.reset:30  %tmp_18_cast4_cast = sext i8 %E to i17

ST_5: tmp_11 (78)  [1/1] 6.77ns  loc: yuv_filter.c:101
.reset:45  %tmp_11 = mul i17 -208, %tmp_18_cast4_cast


 <State 6>: 6.38ns
ST_6: tmp_13_cast (56)  [1/1] 0.00ns  loc: yuv_filter.c:97
.reset:23  %tmp_13_cast = zext i8 %Y to i9

ST_6: C (57)  [1/1] 0.00ns  loc: yuv_filter.c:97
.reset:24  %C = add i9 -16, %tmp_13_cast

ST_6: tmp_16_cast (60)  [1/1] 0.00ns  loc: yuv_filter.c:100
.reset:27  %tmp_16_cast = sext i9 %C to i18

ST_6: tmp_3 (61)  [1/1] 3.36ns  loc: yuv_filter.c:100
.reset:28  %tmp_3 = mul i18 298, %tmp_16_cast

ST_6: tmp_5 (65)  [1/1] 3.02ns  loc: yuv_filter.c:100
.reset:32  %tmp_5 = add i18 128, %tmp_3

ST_6: tmp_26_cast3_cast (75)  [1/1] 0.00ns  loc: yuv_filter.c:101
.reset:42  %tmp_26_cast3_cast = sext i8 %D to i16

ST_6: tmp_10 (76)  [1/1] 3.36ns  loc: yuv_filter.c:101
.reset:43  %tmp_10 = mul i16 -100, %tmp_26_cast3_cast

ST_6: tmp_11_cast (77)  [1/1] 0.00ns  loc: yuv_filter.c:101
.reset:44  %tmp_11_cast = sext i16 %tmp_10 to i17

ST_6: tmp1 (79)  [1/1] 3.02ns  loc: yuv_filter.c:101
.reset:46  %tmp1 = add i17 %tmp_11_cast, %tmp_11

ST_6: p_shl (89)  [1/1] 0.00ns  loc: yuv_filter.c:102
.reset:56  %p_shl = call i17 @_ssdm_op_BitConcatenate.i17.i8.i9(i8 %D, i9 0)

ST_6: p_shl_cast (90)  [1/1] 0.00ns  loc: yuv_filter.c:102
.reset:57  %p_shl_cast = sext i17 %p_shl to i18

ST_6: p_shl1 (91)  [1/1] 0.00ns  loc: yuv_filter.c:102
.reset:58  %p_shl1 = call i10 @_ssdm_op_BitConcatenate.i10.i8.i2(i8 %D, i2 0)

ST_6: p_shl1_cast (92)  [1/1] 0.00ns  loc: yuv_filter.c:102
.reset:59  %p_shl1_cast = sext i10 %p_shl1 to i18

ST_6: tmp_16 (93)  [1/1] 2.43ns  loc: yuv_filter.c:102
.reset:60  %tmp_16 = add i18 %p_shl_cast, %p_shl1_cast


 <State 7>: 8.45ns
ST_7: tmp_18_cast4 (62)  [1/1] 0.00ns  loc: yuv_filter.c:101
.reset:29  %tmp_18_cast4 = sext i8 %E to i18

ST_7: tmp_4 (64)  [1/1] 3.36ns  loc: yuv_filter.c:100
.reset:31  %tmp_4 = mul i18 409, %tmp_18_cast4

ST_7: tmp_20_cast (66)  [1/1] 0.00ns  loc: yuv_filter.c:100
.reset:33  %tmp_20_cast = sext i18 %tmp_5 to i19

ST_7: tmp_6 (67)  [1/1] 3.02ns  loc: yuv_filter.c:100
.reset:34  %tmp_6 = add i18 %tmp_5, %tmp_4

ST_7: tmp_2 (68)  [1/1] 0.00ns  loc: yuv_filter.c:100
.reset:35  %tmp_2 = call i2 @_ssdm_op_PartSelect.i2.i18.i32.i32(i18 %tmp_6, i32 16, i32 17)

ST_7: icmp (69)  [1/1] 2.07ns  loc: yuv_filter.c:100
.reset:36  %icmp = icmp eq i2 %tmp_2, 1

ST_7: tmp1_cast (80)  [1/1] 0.00ns  loc: yuv_filter.c:101
.reset:47  %tmp1_cast = sext i17 %tmp1 to i18

ST_7: tmp_12 (81)  [1/1] 2.47ns  loc: yuv_filter.c:101
.reset:48  %tmp_12 = add i18 %tmp1_cast, %tmp_5

ST_7: tmp_13 (82)  [1/1] 0.00ns  loc: yuv_filter.c:101
.reset:49  %tmp_13 = call i2 @_ssdm_op_PartSelect.i2.i18.i32.i32(i18 %tmp_12, i32 16, i32 17)

ST_7: icmp1 (83)  [1/1] 2.07ns  loc: yuv_filter.c:101
.reset:50  %icmp1 = icmp eq i2 %tmp_13, 1

ST_7: tmp_14 (84)  [1/1] 0.00ns  loc: yuv_filter.c:101 (grouped into LUT with out node G)
.reset:51  %tmp_14 = call i1 @_ssdm_op_BitSelect.i1.i18.i32(i18 %tmp_12, i32 17)

ST_7: phitmp2 (85)  [1/1] 0.00ns  loc: yuv_filter.c:101 (grouped into LUT with out node G)
.reset:52  %phitmp2 = call i8 @_ssdm_op_PartSelect.i8.i18.i32.i32(i18 %tmp_12, i32 8, i32 15)

ST_7: p_phitmp2 (86)  [1/1] 0.00ns  loc: yuv_filter.c:101 (grouped into LUT with out node G)
.reset:53  %p_phitmp2 = select i1 %icmp1, i8 -1, i8 0

ST_7: tmp_15 (87)  [1/1] 0.00ns  loc: yuv_filter.c:101 (grouped into LUT with out node G)
.reset:54  %tmp_15 = or i1 %icmp1, %tmp_14

ST_7: G (88)  [1/1] 2.07ns  loc: yuv_filter.c:101 (out node of the LUT)
.reset:55  %G = select i1 %tmp_15, i8 %p_phitmp2, i8 %phitmp2

ST_7: tmp_35_cast (94)  [1/1] 0.00ns  loc: yuv_filter.c:102
.reset:61  %tmp_35_cast = sext i18 %tmp_16 to i19

ST_7: tmp_17 (95)  [1/1] 2.47ns  loc: yuv_filter.c:102
.reset:62  %tmp_17 = add i18 %tmp_16, %tmp_5

ST_7: tmp_18 (96)  [1/1] 2.47ns  loc: yuv_filter.c:102
.reset:63  %tmp_18 = add i19 %tmp_20_cast, %tmp_35_cast

ST_7: tmp_19 (97)  [1/1] 0.00ns  loc: yuv_filter.c:102
.reset:64  %tmp_19 = call i3 @_ssdm_op_PartSelect.i3.i19.i32.i32(i19 %tmp_18, i32 16, i32 18)

ST_7: icmp2 (98)  [1/1] 2.07ns  loc: yuv_filter.c:102
.reset:65  %icmp2 = icmp sgt i3 %tmp_19, 0

ST_7: tmp_20 (99)  [1/1] 0.00ns  loc: yuv_filter.c:102 (grouped into LUT with out node B)
.reset:66  %tmp_20 = call i1 @_ssdm_op_BitSelect.i1.i19.i32(i19 %tmp_18, i32 18)

ST_7: phitmp3 (100)  [1/1] 0.00ns  loc: yuv_filter.c:102 (grouped into LUT with out node B)
.reset:67  %phitmp3 = call i8 @_ssdm_op_PartSelect.i8.i18.i32.i32(i18 %tmp_17, i32 8, i32 15)

ST_7: p_phitmp3 (101)  [1/1] 0.00ns  loc: yuv_filter.c:102 (grouped into LUT with out node B)
.reset:68  %p_phitmp3 = select i1 %icmp2, i8 -1, i8 0

ST_7: tmp_21 (102)  [1/1] 0.00ns  loc: yuv_filter.c:102 (grouped into LUT with out node B)
.reset:69  %tmp_21 = or i1 %icmp2, %tmp_20

ST_7: B (103)  [1/1] 2.07ns  loc: yuv_filter.c:102 (out node of the LUT)
.reset:70  %B = select i1 %tmp_21, i8 %p_phitmp3, i8 %phitmp3


 <State 8>: 5.32ns
ST_8: tmp_15_cast (49)  [1/1] 0.00ns  loc: yuv_filter.c:103
.reset:16  %tmp_15_cast = zext i23 %tmp_s to i32

ST_8: out_channels_ch1_add (50)  [1/1] 0.00ns  loc: yuv_filter.c:103
.reset:17  %out_channels_ch1_add = getelementptr [2457600 x i8]* %out_channels_ch1, i32 0, i32 %tmp_15_cast

ST_8: out_channels_ch2_add (51)  [1/1] 0.00ns  loc: yuv_filter.c:104
.reset:18  %out_channels_ch2_add = getelementptr [2457600 x i8]* %out_channels_ch2, i32 0, i32 %tmp_15_cast

ST_8: out_channels_ch3_add (52)  [1/1] 0.00ns  loc: yuv_filter.c:105
.reset:19  %out_channels_ch3_add = getelementptr [2457600 x i8]* %out_channels_ch3, i32 0, i32 %tmp_15_cast

ST_8: tmp_8 (70)  [1/1] 0.00ns  loc: yuv_filter.c:100 (grouped into LUT with out node R)
.reset:37  %tmp_8 = call i1 @_ssdm_op_BitSelect.i1.i18.i32(i18 %tmp_6, i32 17)

ST_8: phitmp (71)  [1/1] 0.00ns  loc: yuv_filter.c:100 (grouped into LUT with out node R)
.reset:38  %phitmp = call i8 @_ssdm_op_PartSelect.i8.i18.i32.i32(i18 %tmp_6, i32 8, i32 15)

ST_8: p_phitmp (72)  [1/1] 0.00ns  loc: yuv_filter.c:100 (grouped into LUT with out node R)
.reset:39  %p_phitmp = select i1 %icmp, i8 -1, i8 0

ST_8: tmp_9 (73)  [1/1] 0.00ns  loc: yuv_filter.c:100 (grouped into LUT with out node R)
.reset:40  %tmp_9 = or i1 %icmp, %tmp_8

ST_8: R (74)  [1/1] 2.07ns  loc: yuv_filter.c:100 (out node of the LUT)
.reset:41  %R = select i1 %tmp_9, i8 %p_phitmp, i8 %phitmp

ST_8: StgValue_98 (104)  [2/2] 3.25ns  loc: yuv_filter.c:103
.reset:71  store i8 %R, i8* %out_channels_ch1_add, align 1

ST_8: StgValue_99 (105)  [2/2] 3.25ns  loc: yuv_filter.c:104
.reset:72  store i8 %G, i8* %out_channels_ch2_add, align 1

ST_8: StgValue_100 (106)  [2/2] 3.25ns  loc: yuv_filter.c:105
.reset:73  store i8 %B, i8* %out_channels_ch3_add, align 1


 <State 9>: 3.25ns
ST_9: StgValue_101 (34)  [1/1] 0.00ns  loc: yuv_filter.c:90
.reset:1  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_9: StgValue_102 (35)  [1/1] 0.00ns
.reset:2  call void (...)* @_ssdm_op_SpecLoopName([30 x i8]* @YUV2RGB_LOOP_X_YUV2R)

ST_9: StgValue_103 (36)  [1/1] 0.00ns
.reset:3  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 40000, i64 2457600, i64 784400)

ST_9: StgValue_104 (39)  [1/1] 0.00ns  loc: yuv_filter.c:90
.reset:6  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_9: StgValue_105 (46)  [1/1] 0.00ns  loc: yuv_filter.c:92
.reset:13  call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @p_str4) nounwind

ST_9: StgValue_106 (104)  [1/2] 3.25ns  loc: yuv_filter.c:103
.reset:71  store i8 %R, i8* %out_channels_ch1_add, align 1

ST_9: StgValue_107 (105)  [1/2] 3.25ns  loc: yuv_filter.c:104
.reset:72  store i8 %G, i8* %out_channels_ch2_add, align 1

ST_9: StgValue_108 (106)  [1/2] 3.25ns  loc: yuv_filter.c:105
.reset:73  store i8 %B, i8* %out_channels_ch3_add, align 1

ST_9: StgValue_109 (108)  [1/1] 0.00ns  loc: yuv_filter.c:92
.reset:75  br label %1


 <State 10>: 0.00ns
ST_10: StgValue_110 (110)  [1/1] 0.00ns  loc: yuv_filter.c:108
:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8ns, clock uncertainty: 1ns.

 <State 1>: 2.32ns
The critical path consists of the following:
	fifo read on port 'in_width' (yuv_filter.c:83) [16]  (2.32 ns)

 <State 2>: 6.38ns
The critical path consists of the following:
	'mul' operation ('bound', yuv_filter.c:84) [22]  (6.38 ns)

 <State 3>: 5.33ns
The critical path consists of the following:
	'icmp' operation ('exitcond_flatten', yuv_filter.c:84) [29]  (3.26 ns)
	blocking operation 2.07 ns on control path)

 <State 4>: 4.39ns
The critical path consists of the following:
	fifo read on port 'in_channels_ch3' (yuv_filter.c:96) [55]  (2.32 ns)
	'xor' operation ('E', yuv_filter.c:99) [59]  (2.07 ns)

 <State 5>: 6.77ns
The critical path consists of the following:
	'mul' operation ('tmp_11', yuv_filter.c:101) [78]  (6.77 ns)

 <State 6>: 6.38ns
The critical path consists of the following:
	'add' operation ('C', yuv_filter.c:97) [57]  (0 ns)
	'mul' operation ('tmp_3', yuv_filter.c:100) [61]  (3.36 ns)
	'add' operation ('tmp_5', yuv_filter.c:100) [65]  (3.02 ns)

 <State 7>: 8.45ns
The critical path consists of the following:
	'mul' operation ('tmp_4', yuv_filter.c:100) [64]  (3.36 ns)
	'add' operation ('tmp_6', yuv_filter.c:100) [67]  (3.02 ns)
	'icmp' operation ('icmp', yuv_filter.c:100) [69]  (2.07 ns)

 <State 8>: 5.32ns
The critical path consists of the following:
	'or' operation ('tmp_9', yuv_filter.c:100) [73]  (0 ns)
	'select' operation ('R', yuv_filter.c:100) [74]  (2.07 ns)
	'store' operation (yuv_filter.c:103) of variable 'R', yuv_filter.c:100 on array 'out_channels_ch1' [104]  (3.25 ns)

 <State 9>: 3.25ns
The critical path consists of the following:
	'store' operation (yuv_filter.c:103) of variable 'R', yuv_filter.c:100 on array 'out_channels_ch1' [104]  (3.25 ns)

 <State 10>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
